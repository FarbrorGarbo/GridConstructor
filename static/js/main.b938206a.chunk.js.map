{"version":3,"sources":["GCEngine.ts","GCView.tsx","App.tsx","index.tsx"],"names":["_settings","_drawing","_canvasElm","_cxt","_scale","_pan","_getPersistentSettings","localStorageData","localStorage","getItem","JSON","parse","_getInitialSettings","_readPersistentDrawing","points","x","y","z","_degrees_to_radians","degrees","Math","PI","this","h","window","innerWidth","v","innerHeight","rotation","elevation","distance","picturePlane","offsetH","offsetV","docSize","width","height","settings","point","rot","elev","n","sin","cos","a","b","c","H","V","setItem","stringify","getContext","scale","draw","devicePixelRatio","canvasElm","console","warn","fillStyle","fillRect","calcPoint1","_project","calcPoint2","strokeStyle","forEach","line","calcPointA","calcPointB","beginPath","moveTo","lineTo","stroke","key","calc","arc","GCView","React","useRef","useLayoutEffect","canvas","current","GCEngine","registerCanvas","className","ref","GenericNumberInput","props","inputRef","useState","value","setValue","returnValue","useEffect","label","type","min","max","step","onChange","newValue","parseInt","updateValue","toString","App","getSettings","updateSettings","handleSettings","settingsCopy","setSettings","showSettings","toggle","mousePos","mouseMoved","setScale","pan","onResize","setCanvasSize","addEventListener","removeEventListener","onMouseMove","e","event","buttons","movementX","movementY","onWheel","newScale","deltaY","handleZoom","onClick","preventDefault","val","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b938206a.chunk.js","sourcesContent":["// The GridConstructor 3d engine\r\n\r\nclass GCEngine {\r\n    private _settings: Settings;\r\n    private _drawing: Drawing;\r\n    private _canvasElm: HTMLCanvasElement | undefined;\r\n    private _cxt: CanvasRenderingContext2D | null;\r\n    private _scale: number;\r\n    private _pan: {h: number, v: number};\r\n\r\n    constructor () {\r\n        this._settings = this._getPersistentSettings();\r\n        this._drawing = this._readPersistentDrawing();\r\n        this._scale = 1;\r\n        this._pan = {h: window.innerWidth/2, v: -window.innerHeight/2};\r\n        this._cxt = null;\r\n    }\r\n\r\n    private _getInitialSettings () : Settings {\r\n        return {\r\n            rotation: 0,\r\n            elevation: 0,\r\n            distance: 1000,\r\n            picturePlane: 1000,\r\n            offsetH: 1754,\r\n            offsetV: 1240,\r\n            docSize: {width: 3508, height: 2480} // A4 portrait in 300 ppi\r\n        }\r\n    }\r\n\r\n    private _getPersistentSettings = () => {\r\n        // localStorage.setItem(\"gc_settings\", \"\");\r\n        const localStorageData: string | null = localStorage.getItem(\"gc_settings\");\r\n        const value = !localStorageData\r\n                ? this._getInitialSettings()\r\n                : JSON.parse(localStorageData);\r\n    \r\n        return value;\r\n    }\r\n    \r\n    _readPersistentDrawing = () => {\r\n        const localStorageData: string | null = localStorage.getItem(\"gc_current_drawing\");\r\n        const value = !localStorageData\r\n                ? {\t// Default empty drawing with one point i origo\r\n                    points: {\r\n                        \"x0_y0_z0\": {x: 0, y: 0, z: 0}\r\n                    }\r\n                }\r\n                : JSON.parse(localStorageData);\r\n    \r\n        return value;\r\n    }\r\n\r\n    private _degrees_to_radians = (degrees: number) => {\r\n      return degrees * (Math.PI / 180);\r\n    }\r\n\r\n    private _project (settings: Settings = this._settings, point: Vec) : Point {\r\n        const rot = this._degrees_to_radians(settings.rotation);\r\n        const elev = this._degrees_to_radians(settings.elevation);\r\n        const n = point.x * Math.sin(rot) + point.y * Math.cos(rot);\r\n        const a = point.x * Math.cos(rot) - point.y * Math.sin(rot);\r\n        const b = n * Math.cos(elev) - point.z * Math.sin(elev);\r\n        const c = n * Math.sin(elev) + point.z * Math.cos(elev);\r\n        const H = settings.picturePlane * a / (settings.distance + b); // + settings.offsetH;\r\n        const V = settings.picturePlane * c / (settings.distance + b); // + settings.offsetV;\r\n        return {h: H * this._scale + this._pan.h, v: V * this._scale - this._pan.v};\r\n    }\r\n\r\n    public getSettings(): Settings {\r\n        return this._settings;\r\n    }\r\n\r\n    public setSettings(settings: Settings) {\r\n        this._settings = settings;\r\n        localStorage.setItem(\"gc_settings\", JSON.stringify(settings));\r\n    }\r\n\r\n    public setCanvasSize() {\r\n        if (this._canvasElm && this._canvasElm.getContext) {\r\n            this._canvasElm.width = window.innerWidth;\r\n            this._canvasElm.height = window.innerHeight;\r\n        }\r\n    }\r\n\r\n    public setScale(scale: number) {\r\n        this._scale = scale;\r\n        this.draw();\r\n    }\r\n\r\n    public pan(x: number, y: number) {\r\n        this._pan.h += x / window.devicePixelRatio ;\r\n        this._pan.v += y / window.devicePixelRatio;\r\n    }\r\n\r\n    public registerCanvas(canvasElm: HTMLCanvasElement) {\r\n        if (canvasElm && canvasElm.getContext) {\r\n            this._canvasElm = canvasElm;\r\n            this._canvasElm.width = window.innerWidth;\r\n            this._canvasElm.height = window.innerHeight;\r\n            this._cxt = this._canvasElm.getContext(\"2d\");\r\n            this._scale = 1;\r\n        } else {\r\n            console.warn(\"Registered canvase element is not of type <canvas>!\");\r\n        }\r\n    }\r\n\r\n    public draw() { // settings: Settings = this._settings, drawing?: Drawing) {\r\n        if (this._canvasElm && this._cxt) {\r\n\t\t\tthis._canvasElm.width = window.innerWidth; // settings.viewPortSize.width;\r\n            this._canvasElm.height = window.innerHeight; // settings.viewPortSize.height;\r\n\r\n            // Clear by drawing document background\r\n            this._cxt.fillStyle = \"rgb(231, 230, 227)\";\r\n            this._cxt.fillRect(0, 0, this._canvasElm.width, this._canvasElm.height);\r\n\r\n            // Draw size of document\r\n            let settings = {...this._settings};\r\n            settings.rotation = 0;\r\n            settings.elevation = 0;\r\n            settings.picturePlane = settings.distance;\r\n            this._cxt.fillStyle = \"rgb(245,245,245)\";\r\n            const calcPoint1 = this._project(settings, {x:0, y:0, z:settings.docSize.height});\r\n            const calcPoint2 = this._project(settings, {x:settings.docSize.width, y:0, z:0});\r\n            this._cxt.fillRect(calcPoint1.h - settings.offsetH * this._scale, this._canvasElm!.height - calcPoint1.v + settings.offsetV * this._scale, calcPoint2.h - calcPoint1.h, calcPoint1.v - calcPoint2.v);\r\n\r\n            this._cxt.strokeStyle = \"#aaa\";\r\n            const lines = [\r\n                [{x:0, y:0, z:0}, {x:settings.docSize.width, y:0, z: 0}],\r\n                [{x:0, y:0, z:settings.docSize.height}, {x:settings.docSize.width, y:0, z: settings.docSize.height}],\r\n                [{x:0, y:0, z:0}, {x:0, y:0, z: this._settings.docSize.height}],\r\n                [{x:settings.docSize.width, y:0, z:0}, {x:settings.docSize.width, y:0, z: settings.docSize.height}],\r\n            ]\r\n\r\n            lines.forEach(line => {\r\n                const calcPointA = this._project(settings, line[0]);\r\n                const calcPointB = this._project(settings, line[1]);\r\n                this._cxt!.beginPath();\r\n                this._cxt!.moveTo(calcPointA.h - settings.offsetH * this._scale, this._canvasElm!.height - calcPointA.v + settings.offsetV * this._scale);\r\n                this._cxt!.lineTo(calcPointB.h - settings.offsetH * this._scale, this._canvasElm!.height - calcPointB.v + settings.offsetV * this._scale);\r\n                this._cxt!.stroke();\r\n            });\r\n\r\n            // Gizmo\r\n            this._cxt.strokeStyle = \"#f00\";\r\n            const xLines = [\r\n                [{x:0, y:0, z:0}, {x:500, y:0, z:0}],\r\n                [{x:480, y:0, z:5}, {x:500, y:0, z:0}]\r\n            ]\r\n            xLines.forEach(line => {\r\n                const calcPointA = this._project(this._settings, line[0]);\r\n                const calcPointB = this._project(this._settings, line[1]);\r\n                this._cxt!.beginPath();\r\n                this._cxt!.moveTo(calcPointA.h, this._canvasElm!.height - calcPointA.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n                this._cxt!.stroke();\r\n            });\r\n\r\n            this._cxt.strokeStyle = \"#0f0\";\r\n            const yLines = [\r\n                [{x:0, y:0, z:0}, {x:0, y:500, z:0}],\r\n                [{x:5, y:480, z:0}, {x:0, y:500, z:0}]\r\n            ]\r\n            yLines.forEach(line => {\r\n                const calcPointA = this._project(this._settings, line[0]);\r\n                const calcPointB = this._project(this._settings, line[1]);\r\n                this._cxt!.beginPath();\r\n                this._cxt!.moveTo(calcPointA.h, this._canvasElm!.height - calcPointA.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n                this._cxt!.stroke();\r\n            });\r\n\r\n            this._cxt.strokeStyle = \"#00f\";\r\n            const zLines = [\r\n                [{x:0, y:0, z:0}, {x:0, y:0, z:500}],\r\n                [{x:5, y:0, z:480}, {x:0, y:0, z:500}]\r\n            ]\r\n            zLines.forEach(line => {\r\n                const calcPointA = this._project(this._settings, line[0]);\r\n                const calcPointB = this._project(this._settings, line[1]);\r\n                this._cxt!.beginPath();\r\n                this._cxt!.moveTo(calcPointA.h, this._canvasElm!.height - calcPointA.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n                this._cxt!.stroke();\r\n            });\r\n\r\n            this._cxt.strokeStyle = \"#aaa\";\r\n            this._cxt.beginPath();\r\n\r\n            const cubeLines = [\r\n                [{x:-100, y:-100, z:-100}, {x:100, y:-100, z:-100}],\r\n                [{x:-100, y:100, z:-100}, {x:100, y:100, z:-100}],\r\n                [{x:-100, y:-100, z:100}, {x:100, y:-100, z:100}],\r\n                [{x:-100, y:100, z:100}, {x:100, y:100, z:100}],\r\n\r\n                [{x:-100, y:-100, z:-100}, {x:-100, y:-100, z:100}],\r\n                [{x:100, y:-100, z:-100}, {x:100, y:-100, z:100}],\r\n                [{x:100, y:100, z:-100}, {x:100, y:100, z:100}],\r\n                [{x:-100, y:100, z:-100}, {x:-100, y:100, z:100}],\r\n                \r\n                [{x:-100, y:-100, z:100}, {x:-100, y:100, z:100}],\r\n                [{x:100, y:-100, z:100}, {x:100, y:100, z:100}],\r\n                [{x:-100, y:-100, z:-100}, {x:-100, y:100, z:-100}],\r\n                [{x:100, y:-100, z:-100}, {x:100, y:100, z:-100}],\r\n\r\n                // [{x:-297/2, y:0, z:-210/2}, {x:297/2, y:0, z:-210/2}],\r\n                // [{x:-297/2, y:0, z:210/2}, {x:297/2, y:0, z:210/2}],\r\n                // [{x:-297/2, y:0, z:-210/2}, {x:-297/2, y:0, z:210/2}],\r\n                // [{x:297/2, y:0, z:-210/2}, {x:297/2, y:0, z:210/2}]\r\n            ]\r\n            cubeLines.forEach(line => {\r\n                const calcPointA = this._project(this._settings, line[0]);\r\n                const calcPointB = this._project(this._settings, line[1]);\r\n                this._cxt!.moveTo(calcPointA.h, this._canvasElm!.height - calcPointA.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n            });\r\n            this._cxt.stroke();\r\n\r\n            if (this._drawing) {\r\n                this._cxt.strokeStyle = \"#000\";\r\n                for (const key in this._drawing.points) {\r\n                    const calc = this._project(this._settings, this._drawing.points[key]);\r\n                    this._cxt!.beginPath();\r\n                    this._cxt!.arc(calc.h, this._canvasElm!.height - calc.v, 5, 0, 2 * Math.PI);\r\n                    this._cxt!.stroke();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport type Settings = {\r\n    rotation: number,\r\n    elevation: number,\r\n    distance: number,\r\n    picturePlane: number,\r\n    offsetH: number,\r\n    offsetV: number,\r\n    docSize: {width: number, height: number}\r\n};\r\n\r\nexport type Vec = {\r\n    x: number,\r\n    y: number,\r\n    z: number\r\n};\r\n\r\nexport type Point = {\r\n    h: number,\r\n    v: number\r\n};\r\n\r\nexport type Line = {\r\n    start: Vec,\r\n    end: Vec\r\n};\r\n\r\nexport type Drawing = {\r\n    points: {\r\n        [key: string] : Vec\r\n    }\r\n}\r\n\r\nexport default new GCEngine ();\r\n\r\n","import React from \"react\";\r\nimport GCEngine from \"./GCEngine\";\r\n\r\nconst GCView: React.FC = () => {\r\n\tconst canvasElm = React.useRef<HTMLCanvasElement>(null);\r\n\r\n\t// Lifecycle ComponentDidMount: should only occur once and give us a persistant ref to the canvas.\r\n\tReact.useLayoutEffect(() => {\r\n\t\t// console.log(\"useLayout\", canvasElm);\r\n\t\tconst canvas = canvasElm.current;\r\n\t\tif (canvas)\r\n\t\t\tGCEngine.registerCanvas(canvas);\r\n\r\n\t}, []);\r\n\r\n  \treturn (\r\n\t\t<canvas className={\"canvas\"} ref={canvasElm} />\r\n  \t);\r\n}\r\n\r\nexport default GCView;\r\n","import React from \"react\";\r\nimport GCEngine, {Settings} from \"./GCEngine\";\r\nimport GCView from \"./GCView\";\r\nimport \"./App.css\";\r\n\r\nconst App: React.FC = () => {\r\n\t// Settings\r\n\tconst [settings, updateSettings] = React.useState<Settings>(GCEngine.getSettings());\r\n\r\n\tconst handleSettings = (key: string, value: number) => {\r\n\t\tif (settings) {\r\n\t\t\tlet settingsCopy: Settings = {...settings};\r\n\t\tswitch (key) {\r\n\t\t\tcase \"rotation\": settingsCopy.rotation = value; break;\r\n\t\t\tcase \"elevation\": settingsCopy.elevation = value; break;\r\n\t\t\tcase \"distance\": settingsCopy.distance = value; break;\r\n\t\t\tcase \"picturePlane\": settingsCopy.picturePlane = value; break;\r\n\t\t\tcase \"offsetH\": settingsCopy.offsetH = value; break;\r\n\t\t\tcase \"offsetV\": settingsCopy.offsetV = value; break;\r\n\t\t}\r\n\t\tif (JSON.stringify(settings) !== JSON.stringify(settingsCopy))\r\n\t\t\tupdateSettings(settingsCopy);\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => { GCEngine.setSettings(settings) },\r\n\t\t[settings]\r\n\t);\r\n\r\n\t// Show/hide settings\r\n\tconst [showSettings, toggle] = React.useState(false);\r\n\r\n\tconst toggleSettings = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\ttoggle(!showSettings);\r\n\t}\r\n\r\n\t// Pan\r\n\tconst [mousePos, mouseMoved] = React.useState<{x: number, y: number} | null>(null);\r\n\r\n\tconst handleMouseMove = (event: React.MouseEvent) => {\r\n\t\tif (event.buttons === 1) {\r\n\t\t\tmouseMoved({x: event.movementX, y: event.movementY});\r\n\t\t} else if (mousePos) {\r\n\t\t\tmouseMoved(null);\r\n\t\t}\r\n\t}\r\n\r\n\t// Zoom\r\n\tconst [scale, setScale] = React.useState(1);\r\n\r\n\tconst handleZoom = (event: React.WheelEvent) => {\r\n\t\tlet newScale = scale - event.deltaY * 0.0005;\r\n\t\tif (newScale < 0.2) newScale = 0.2;\r\n\t\tsetScale(newScale);\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => { GCEngine.setScale(scale) },\r\n\t\t[scale]\r\n\t);\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tmousePos && GCEngine.pan(mousePos.x, mousePos.y);\r\n\t\t\tGCEngine.draw();\r\n\r\n\t\t\tconst onResize = () => {\r\n\t\t\t\tGCEngine.setCanvasSize();\r\n\t\t\t\tGCEngine.draw();\r\n\t\t\t}\r\n\t\r\n\t\t\twindow.addEventListener('resize', onResize);\r\n\t\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('resize', onResize);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[mousePos, settings]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\" onMouseMove={(e) => handleMouseMove(e)} onWheel={(e) => handleZoom(e)} >\r\n\t\t\t<GCView/>\r\n\r\n\t\t\t<div className=\"menu\">\r\n\t\t\t\t<button onClick={toggleSettings}>{showSettings ? \"Back\" : \"Settings\"}</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{showSettings &&\r\n\t\t\t<div className={\"settings\"}>\r\n\t\t\t\t<h2>Perspektive Settings</h2>\r\n\t\t\t\t<GenericNumberInput label={\"Rotation\"} min={0} max={359} step={5} value={settings.rotation} returnValue={(val) => handleSettings(\"rotation\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Elevation\"} min={0} max={90} step={5} value={settings.elevation} returnValue={(val) => handleSettings(\"elevation\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Distance\"} min={0} max={999999} step={50} value={settings.distance} returnValue={(val) => handleSettings(\"distance\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Distance to Picture Plane\"} min={0} max={999999} step={50} value={settings.picturePlane} returnValue={(val) => handleSettings(\"picturePlane\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Offset Horisontal\"} min={0} max={999999} step={5} value={settings.offsetH} returnValue={(val) => handleSettings(\"offsetH\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Offset Vertical\"} min={0} max={999999} step={5} value={settings.offsetV} returnValue={(val) => handleSettings(\"offsetV\", val)} />\r\n\t\t\t</div>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\ntype GenericNumberInputProps = {\r\n\tlabel: string;\r\n\tmin: number;\r\n\tmax: number;\r\n\tstep: number;\r\n\tvalue: number;\r\n\treturnValue(val: number): void;\r\n}\r\n\r\nconst GenericNumberInput: React.FC<GenericNumberInputProps> = (props) => {\r\n\tconst inputRef = React.useRef<HTMLInputElement>(null);\r\n\tconst [value, setValue] = React.useState(props.value);\r\n\r\n\tconst updateValue = () => {\r\n\t\tlet  newValue = parseInt(inputRef.current!.value === \"\" ? \"0\" : inputRef.current!.value);\r\n\t\tif (newValue < props.min) newValue = props.min;\r\n\t\telse if (newValue > props.max) newValue = props.max;\r\n\t\tsetValue(newValue);\r\n\t}\r\n\r\n\tconst {returnValue} = props;\r\n\r\n\tReact.useEffect( () => { returnValue(value) }, [returnValue, value] );\r\n\r\n\treturn (\r\n\t\t<label>{props.label}:\r\n\t\t\t<input\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tmin={props.min}\r\n\t\t\t\tmax={props.max}\r\n\t\t\t\tstep={props.step}\r\n\t\t\t\tonChange={() => updateValue()}\r\n\t\t\t\tvalue={value.toString()}\r\n\t\t\t/>\r\n\t\t</label>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}