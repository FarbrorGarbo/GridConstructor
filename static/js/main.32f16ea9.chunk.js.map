{"version":3,"sources":["GCEngine.ts","data.ts","GCView.tsx","GenericNumberInput.tsx","NewPoint.tsx","SelectedPoint.tsx","SettingsDialog.tsx","App.tsx","index.tsx"],"names":["_version","_settings","_drawing","_canvasElm","_cxt","_scale","_pan","selectedPoint","previewPoint","_getPersistentSettings","localStorageData","localStorage","getItem","JSON","parse","_getInitialSettings","_readPersistentDrawing","points","x","y","z","_degrees_to_radians","degrees","Math","PI","this","h","window","innerWidth","v","innerHeight","rotation","elevation","distance","picturePlane","offsetH","offsetV","docSize","width","height","settings","useScale","line","color","calcPointA","project","start","calcPointB","end","strokeStyle","beginPath","moveTo","lineTo","stroke","drawAxis","lines","forEach","_drawLine","point","rot","elev","n","sin","cos","a","b","c","H","V","vector","id","undefined","console","log","draw","stringify","setItem","getContext","scale","devicePixelRatio","canvasElm","warn","fillStyle","fillRect","calcPoint1","calcPoint2","_drawGizmo","key","calc","arc","clientHeight","GCView","props","React","useRef","useLayoutEffect","canvas","current","GCEngine","registerCanvas","className","ref","onClick","e","GenericNumberInput","inputRef","useState","value","setValue","returnValue","useEffect","label","type","min","max","step","onChange","newValue","parseInt","updateValue","toString","NewPoint","_x","_y","_z","addPointToDrawing","val","NewPointFC","instance","killInstance","create","SelectedPoint","pointId","_selectedPointId","delete","getIdFromSelectedPoint","deletePointFromDrawing","set","newId","drawing","copy","_getPointFromDrawing","cleanUp","mousePosition","getSettings","found","Object","keys","pos","deltaH","deltaV","heightOfDrawing","sqrt","SelectedPointFC","SettingsDialog","handleSettings","settingsCopy","setSettings","SettingsDialogFC","onMouseDown","stopPropagation","onMouseMove","App","settingsInstance","setSettingsInstance","mousePos","mouseMoved","setScale","pan","onResize","setCanvasSize","addEventListener","removeEventListener","touchRefPoint","setTouchRefPoint","touchMovement","setTouchMovement","touchDistance","setTouchDistance","lastTouchDistance","setLastTouchDistance","newScale","getScale","addPointInstance","showAddPoint","selectedId","setSelectedId","selectedPointInstance","selectPoint","sel","event","buttons","movementX","movementY","onWheel","deltaY","handleZoom","onTouchStart","touches","length","deltaX","clientX","clientY","handleTouchStart","onTouchEnd","onTouchMove","deltaX2","deltaY2","ceil","handleTouchMove","pointIdAtPosition","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32f16ea9.chunk.js","sourcesContent":["// The GridConstructor 3d engine\r\nimport {gizmoLines} from \"./data\";\r\n\r\nclass GCEngine {\r\n    private _version: string;\r\n    private _settings: Settings;\r\n    private _drawing: Drawing;\r\n    private _canvasElm: HTMLCanvasElement | undefined;\r\n    private _cxt: CanvasRenderingContext2D | null;\r\n    private _scale: number;\r\n    private _pan: {h: number, v: number};\r\n    public selectedPoint: Vec | null;\r\n    public previewPoint: Vec | null;\r\n\r\n    constructor () {\r\n        this._version = \"0.1.4\"\r\n        this._settings = this._getPersistentSettings();\r\n        this._drawing = this._readPersistentDrawing();\r\n        this._scale = 1;\r\n        this._pan = {h: window.innerWidth/2, v: -window.innerHeight/2};\r\n        this._cxt = null;\r\n        this.selectedPoint = null;\r\n        this.previewPoint = null;\r\n    }\r\n\r\n    private _getInitialSettings () : Settings {\r\n        return {\r\n            rotation: 0,\r\n            elevation: 0,\r\n            distance: 1000,\r\n            picturePlane: 1000,\r\n            offsetH: 1754,\r\n            offsetV: 1240,\r\n            docSize: {width: 3508, height: 2480} // A4 portrait in 300 ppi\r\n        }\r\n    }\r\n\r\n    private _getPersistentSettings = () => {\r\n        // localStorage.setItem(\"gc_settings\", \"\");\r\n        const localStorageData: string | null = localStorage.getItem(\"gc_settings\");\r\n        const value = !localStorageData\r\n                ? this._getInitialSettings()\r\n                : JSON.parse(localStorageData);\r\n    \r\n        return value;\r\n    }\r\n    \r\n    private _readPersistentDrawing = () => {\r\n        const localStorageData: string | null = localStorage.getItem(\"gc_current_drawing\");\r\n        const value = !localStorageData\r\n                ? {\t// Default empty drawing with one point i origo\r\n                    points: {\r\n                        \"0,0,0\": {x: 0, y: 0, z: 0}\r\n                    }\r\n                }\r\n                : JSON.parse(localStorageData);\r\n    \r\n        return value;\r\n    }\r\n\r\n    private _degrees_to_radians = (degrees: number) => {\r\n      return degrees * (Math.PI / 180);\r\n    }\r\n\r\n    private _drawLine(settings: Settings, useScale: boolean = true, line: Line, color: string) {\r\n        const calcPointA = this.project(settings, line.start, useScale);\r\n        const calcPointB = this.project(settings, line.end, useScale);\r\n        this._cxt!.strokeStyle = color;\r\n        this._cxt!.beginPath();\r\n        this._cxt!.moveTo(calcPointA.h, this._canvasElm!.height - calcPointA.v);\r\n        this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n        this._cxt!.stroke();\r\n    };\r\n\r\n    private _drawGizmo() {\r\n        if (!this._cxt) return;\r\n        let settings = {...this._settings};\r\n        settings.distance = 999999;\r\n        settings.picturePlane = 999999;\r\n\r\n        const drawAxis = (color: string, lines: Line[]) => {\r\n            this._cxt!.strokeStyle = color;\r\n            lines.forEach(line => {\r\n                this._drawLine(settings, false, line, color);\r\n            });\r\n        }\r\n\r\n        const lines = gizmoLines();\r\n        drawAxis(\"#f00\", lines[0]);\r\n        drawAxis(\"#0f0\", lines[1]);\r\n        drawAxis(\"#00f\", lines[2]);\r\n    }\r\n\r\n    public project(settings: Settings = this._settings, point: Vec, useScale: boolean = true) : Point {\r\n        const rot = this._degrees_to_radians(settings.rotation);\r\n        const elev = this._degrees_to_radians(settings.elevation);\r\n        const n = point.x * Math.sin(rot) + point.y * Math.cos(rot);\r\n        const a = point.x * Math.cos(rot) - point.y * Math.sin(rot);\r\n        const b = n * Math.cos(elev) - point.z * Math.sin(elev);\r\n        const c = n * Math.sin(elev) + point.z * Math.cos(elev);\r\n        const H = settings.picturePlane * a / (settings.distance + b); // + settings.offsetH;\r\n        const V = settings.picturePlane * c / (settings.distance + b); // + settings.offsetV;\r\n\r\n        if (useScale)  return {h: H * this._scale + this._pan.h, v: V * this._scale - this._pan.v};\r\n        return {h: H + this._pan.h, v: V - this._pan.v};\r\n    }\r\n\r\n    public get heightOfDrawing() {\r\n        return this._canvasElm!.clientHeight;\r\n    }\r\n\r\n    public get drawing() {\r\n        return this._drawing;\r\n    }\r\n\r\n    public addPointToDrawing(vector: Vec, id?: string) {\r\n        if (id) {\r\n            this._drawing.selectedPoint = vector;\r\n        } else {\r\n            if (this._drawing.points[\"\" + vector.x + \",\" + vector.y + \",\" + vector.z] !== undefined) return null;\r\n            this._drawing.points[\"\" + vector.x + \",\" + vector.y + \",\" + vector.z] = vector;\r\n        }\r\n        console.log(this._drawing);\r\n        this.draw();\r\n    }\r\n\r\n    public deletePointFromDrawing(id: string) {\r\n        if (this._drawing.points[id]) {\r\n            delete this._drawing.points[id];\r\n            this.draw();\r\n        }\r\n    }\r\n\r\n    public getSettings(): Settings {\r\n        return this._settings;\r\n    }\r\n\r\n    public setSettings(settings: Settings) {\r\n        if (JSON.stringify(this._settings) !== JSON.stringify(settings)) {\r\n            this._settings = settings;\r\n            localStorage.setItem(\"gc_settings\", JSON.stringify(this._settings));\r\n            this.draw();\r\n\t\t}\r\n    }\r\n\r\n    public setCanvasSize() {\r\n        if (this._canvasElm && this._canvasElm.getContext) {\r\n            this._canvasElm.width = window.innerWidth;\r\n            this._canvasElm.height = window.innerHeight;\r\n        }\r\n    }\r\n\r\n    public getScale() {\r\n        return this._scale;\r\n    }\r\n\r\n    public setScale(scale: number) {\r\n        this._scale = scale;\r\n        this.draw();\r\n    }\r\n\r\n    public pan(x: number, y: number) {\r\n        this._pan.h += x / window.devicePixelRatio ;\r\n        this._pan.v += y / window.devicePixelRatio;\r\n    }\r\n\r\n    public registerCanvas(canvasElm: HTMLCanvasElement) {\r\n        if (canvasElm && canvasElm.getContext) {\r\n            this._canvasElm = canvasElm;\r\n            this._canvasElm.width = window.innerWidth;\r\n            this._canvasElm.height = window.innerHeight;\r\n            this._cxt = this._canvasElm.getContext(\"2d\");\r\n            this._scale = 1;\r\n            console.log(\"version\", this._version);\r\n        } else {\r\n            console.warn(\"Registered canvase element is not of type <canvas>!\");\r\n        }\r\n    }\r\n\r\n    public draw() { // settings: Settings = this._settings, drawing?: Drawing) {\r\n        if (this._canvasElm && this._cxt) {\r\n\t\t\tthis._canvasElm.width = window.innerWidth; // settings.viewPortSize.width;\r\n            this._canvasElm.height = window.innerHeight; // settings.viewPortSize.height;\r\n\r\n            // Clear by drawing document background\r\n            this._cxt.fillStyle = \"rgb(231, 230, 227)\";\r\n            this._cxt.fillRect(0, 0, this._canvasElm.width, this._canvasElm.height);\r\n\r\n            // Draw size of document\r\n            let settings = {...this._settings};\r\n            settings.rotation = 0;\r\n            settings.elevation = 0;\r\n            settings.picturePlane = settings.distance;\r\n            this._cxt.fillStyle = \"rgb(245,245,245)\";\r\n            const calcPoint1 = this.project(settings, {x:0, y:0, z:settings.docSize.height});\r\n            const calcPoint2 = this.project(settings, {x:settings.docSize.width, y:0, z:0});\r\n            this._cxt.fillRect(calcPoint1.h - settings.offsetH * this._scale, this._canvasElm!.height - calcPoint1.v + settings.offsetV * this._scale, calcPoint2.h - calcPoint1.h, calcPoint1.v - calcPoint2.v);\r\n\r\n            this._cxt.strokeStyle = \"#aaa\";\r\n            const lines = [\r\n                [{x:0, y:0, z:0}, {x:settings.docSize.width, y:0, z: 0}],\r\n                [{x:0, y:0, z:settings.docSize.height}, {x:settings.docSize.width, y:0, z: settings.docSize.height}],\r\n                [{x:0, y:0, z:0}, {x:0, y:0, z: this._settings.docSize.height}],\r\n                [{x:settings.docSize.width, y:0, z:0}, {x:settings.docSize.width, y:0, z: settings.docSize.height}],\r\n            ]\r\n\r\n            lines.forEach(line => {\r\n                const calcPointA = this.project(settings, line[0]);\r\n                const calcPointB = this.project(settings, line[1]);\r\n                this._cxt!.beginPath();\r\n                this._cxt!.moveTo(calcPointA.h - settings.offsetH * this._scale, this._canvasElm!.height - calcPointA.v + settings.offsetV * this._scale);\r\n                this._cxt!.lineTo(calcPointB.h - settings.offsetH * this._scale, this._canvasElm!.height - calcPointB.v + settings.offsetV * this._scale);\r\n                this._cxt!.stroke();\r\n            });\r\n\r\n            // Gizmo\r\n            this._drawGizmo();\r\n\r\n            this._cxt.strokeStyle = \"#aaa\";\r\n            this._cxt.beginPath();\r\n\r\n            const cubeLines = [\r\n                [{x:-100, y:-100, z:-100}, {x:100, y:-100, z:-100}],\r\n                [{x:-100, y:100, z:-100}, {x:100, y:100, z:-100}],\r\n                [{x:-100, y:-100, z:100}, {x:100, y:-100, z:100}],\r\n                [{x:-100, y:100, z:100}, {x:100, y:100, z:100}],\r\n\r\n                [{x:-100, y:-100, z:-100}, {x:-100, y:-100, z:100}],\r\n                [{x:100, y:-100, z:-100}, {x:100, y:-100, z:100}],\r\n                [{x:100, y:100, z:-100}, {x:100, y:100, z:100}],\r\n                [{x:-100, y:100, z:-100}, {x:-100, y:100, z:100}],\r\n                \r\n                [{x:-100, y:-100, z:100}, {x:-100, y:100, z:100}],\r\n                [{x:100, y:-100, z:100}, {x:100, y:100, z:100}],\r\n                [{x:-100, y:-100, z:-100}, {x:-100, y:100, z:-100}],\r\n                [{x:100, y:-100, z:-100}, {x:100, y:100, z:-100}]\r\n            ]\r\n            cubeLines.forEach(line => {\r\n                this._drawLine(this._settings, true, {start: line[0], end: line[1]}, \"#aaa\");\r\n            });\r\n            this._cxt.stroke();\r\n\r\n            if (this._drawing) {\r\n                this._cxt.strokeStyle = \"#000\";\r\n                for (const key in this._drawing.points) {\r\n                    const calc = this.project(this._settings, this._drawing.points[key]);\r\n                    this._cxt!.beginPath();\r\n                    this._cxt!.arc(calc.h, this._canvasElm!.height - calc.v, 5, 0, 2 * Math.PI);\r\n                    this._cxt!.stroke();\r\n                }\r\n                this._cxt.strokeStyle = \"#d00\";\r\n                if (this.previewPoint) {\r\n                    const calc = this.project(this._settings, this.previewPoint);\r\n                    this._cxt!.beginPath();\r\n                    this._cxt!.arc(calc.h, this._canvasElm!.height - calc.v, 5, 0, 2 * Math.PI);\r\n                    this._cxt!.stroke();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport type Settings = {\r\n    rotation: number,\r\n    elevation: number,\r\n    distance: number,\r\n    picturePlane: number,\r\n    offsetH: number,\r\n    offsetV: number,\r\n    docSize: {width: number, height: number}\r\n};\r\n\r\nexport type Vec = {\r\n    x: number,\r\n    y: number,\r\n    z: number\r\n};\r\n\r\nexport type Point = {\r\n    h: number,\r\n    v: number\r\n};\r\n\r\nexport type Line = {\r\n    start: Vec,\r\n    end: Vec\r\n};\r\n\r\nexport type Drawing = {\r\n    points: {\r\n        [key: string] : Vec\r\n    },\r\n    selectedPoint?: Vec\r\n}\r\n\r\nexport default new GCEngine ();\r\n\r\n","import {Line} from \"./GCEngine\";\r\n\r\nexport const gizmoLines = (): Line[][] => {\r\n\treturn [\r\n\t\t[\r\n\t\t\t{start: {x:0, y:0, z:0}, end: {x:100, y:0, z:0}},\r\n\t\t\t{start: {x:80, y:0, z:3}, end: {x:100, y:0, z:0}},\r\n\t\t\t{start: {x:80, y:0, z:-3}, end: {x:100, y:0, z:0}},\r\n\t\t\t{start: {x:80, y:3, z:0}, end: {x:100, y:0, z:0}},\r\n\t\t\t{start: {x:80, y:-3, z:0}, end: {x:100, y:0, z:0}}\r\n\t\t],\r\n\t\t[\r\n            {start: {x:0, y:0, z:0}, end: {x:0, y:100, z:0}},\r\n            {start: {x:3, y:80, z:0}, end: {x:0, y:100, z:0}},\r\n            {start: {x:-3, y:80, z:0}, end: {x:0, y:100, z:0}},\r\n            {start: {x:0, y:80, z:3}, end: {x:0, y:100, z:0}},\r\n            {start: {x:0, y:80, z:-3}, end: {x:0, y:100, z:0}}\r\n\t\t],\r\n\t\t[\r\n            {start: {x:0, y:0, z:0}, end: {x:0, y:0, z:100}},\r\n            {start: {x:3, y:0, z:80}, end: {x:0, y:0, z:100}},\r\n            {start: {x:-3, y:0, z:80}, end: {x:0, y:0, z:100}},\r\n            {start: {x:0, y:3, z:80}, end: {x:0, y:0, z:100}},\r\n            {start: {x:0, y:-3, z:80}, end: {x:0, y:0, z:100}}\r\n        ]\r\n\t];\r\n}","import React from \"react\";\r\nimport GCEngine from \"./GCEngine\";\r\n\r\nconst GCView: React.FC<{onClick: (e: React.MouseEvent) => void}> = (props) => {\r\n\tconst canvasElm = React.useRef<HTMLCanvasElement>(null);\r\n\r\n\t// Lifecycle ComponentDidMount: should only occur once and give us a persistant ref to the canvas.\r\n\tReact.useLayoutEffect(() => {\r\n\t\t// console.log(\"useLayout\", canvasElm);\r\n\t\tconst canvas = canvasElm.current;\r\n\t\tif (canvas)\r\n\t\t\tGCEngine.registerCanvas(canvas);\r\n\r\n\t}, []);\r\n\r\n  \treturn (\r\n\t\t<canvas\r\n\t\t\tclassName={\"canvas\"}\r\n\t\t\tref={canvasElm}\r\n\t\t\tonClick={(e) => {props.onClick(e)}}\r\n\t\t/>\r\n  \t);\r\n}\r\n\r\nexport default GCView;\r\n","import React from \"react\";\r\n\r\nexport type GenericNumberInputProps = {\r\n\tlabel: string;\r\n\tmin: number;\r\n\tmax: number;\r\n\tstep: number;\r\n\tvalue: number;\r\n\treturnValue(val: number): void;\r\n}\r\n\r\nexport const GenericNumberInput: React.FC<GenericNumberInputProps> = (props) => {\r\n\tconst inputRef = React.useRef<HTMLInputElement>(null);\r\n\tconst [value, setValue] = React.useState(props.value);\r\n\r\n\tconst updateValue = () => {\r\n\t\tlet  newValue = parseInt(inputRef.current!.value === \"\" ? \"0\" : inputRef.current!.value);\r\n\t\tif (newValue < props.min) newValue = props.min;\r\n\t\telse if (newValue > props.max) newValue = props.max;\r\n\t\tsetValue(newValue);\r\n\t}\r\n\r\n\tconst {returnValue} = props;\r\n\r\n\tReact.useEffect( () => { returnValue(value) }, [returnValue, value] );\r\n\r\n\treturn (\r\n\t\t<label>{props.label}:\r\n\t\t\t<input\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tmin={props.min}\r\n\t\t\t\tmax={props.max}\r\n\t\t\t\tstep={props.step}\r\n\t\t\t\tonChange={() => updateValue()}\r\n\t\t\t\tvalue={value.toString()}\r\n\t\t\t/>\r\n\t\t</label>\r\n\t);\r\n}","import React from \"react\";\r\nimport GCEngine from \"./GCEngine\";\r\nimport {GenericNumberInput} from \"./GenericNumberInput\";\r\n\r\nexport class NewPoint {\r\n    constructor(\r\n        private _x: number = 0,\r\n        private _y: number = 0,\r\n        private _z: number = 0\r\n        ) {\r\n            GCEngine.previewPoint = {x: 0, y: 0, z: 0};\r\n            GCEngine.draw();\r\n        }\r\n\r\n    public get x() {\r\n        return this._x;\r\n    }\r\n\r\n    public set x(val: number) {\r\n        this._x = val;\r\n        if (GCEngine.previewPoint) {\r\n            GCEngine.previewPoint.x = val;\r\n        }\r\n        GCEngine.draw();\r\n    }\r\n\r\n    public get y() {\r\n        return this._y;\r\n    }\r\n\r\n    public set y(val: number) {\r\n        this._y = val;\r\n        if (GCEngine.previewPoint) {\r\n            GCEngine.previewPoint.y = val;\r\n        }\r\n        GCEngine.draw();\r\n    }\r\n\r\n    public get z() {\r\n        return this._z;\r\n    }\r\n\r\n    public set z(val: number) {\r\n        this._z = val;\r\n        if (GCEngine.previewPoint) {\r\n            GCEngine.previewPoint.z = val;\r\n        }\r\n        GCEngine.draw();\r\n    }\r\n\r\n    public create() {\r\n        GCEngine.addPointToDrawing({x: this._x, y: this._y, z: this._z});\r\n    }\r\n\r\n    public cleanUp() {\r\n        GCEngine.previewPoint = null;\r\n        GCEngine.draw();\r\n    }\r\n}\r\n\r\nexport interface NewPointFCProps {\r\n    instance: NewPoint;\r\n    killInstance: () => void;\r\n}\r\n\r\nexport const NewPointFC: React.FC<NewPointFCProps> = (props) => {\r\n    const {instance, killInstance} = props;\r\n    return (\r\n        <div className=\"dialog\">\r\n            <h2>Add point</h2>\r\n            <GenericNumberInput label=\"X\" value={instance.x} min={-999} max={999} step={1} returnValue={(val) => {instance.x = val}} />\r\n            <GenericNumberInput label=\"Y\" value={instance.y} min={-999} max={999} step={1} returnValue={(val) => {instance.y = val}} />\r\n            <GenericNumberInput label=\"Z\" value={instance.z} min={-999} max={999} step={1} returnValue={(val) => {instance.z = val}} />\r\n            <button onClick={() => {instance.create(); killInstance()}}>Create</button>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport GCEngine, {Vec, Point} from \"./GCEngine\";\r\nimport {GenericNumberInput} from \"./GenericNumberInput\";\r\n\r\nexport class SelectedPoint {\r\n    private _selectedPointId: string;\r\n\r\n    constructor(pointId?: string) {\r\n        if (pointId) {\r\n            this._selectedPointId = pointId;\r\n            GCEngine.previewPoint = {...GCEngine.drawing.points[pointId]};\r\n        } else {\r\n            this._selectedPointId = \"0,0,0\";\r\n            GCEngine.previewPoint = {x: 0, y: 0, z: 0};\r\n        }\r\n        GCEngine.draw();\r\n    }\r\n\r\n    public static pointIdAtPosition(mousePosition: Point): string {\r\n        const settings = GCEngine.getSettings();\r\n        let found = \"\";\r\n        Object.keys(GCEngine.drawing.points).forEach((key: string) => {\r\n            const vector = GCEngine.drawing.points[key];\r\n            const pos = GCEngine.project(settings, vector, true);\r\n            const deltaH = mousePosition.h - pos.h;\r\n            const deltaV = GCEngine.heightOfDrawing - mousePosition.v - pos.v;\r\n            const distance = Math.sqrt(deltaH * deltaH + deltaV * deltaV);\r\n            if (distance < 7) {\r\n                found = key;\r\n            }\r\n        });\r\n        return found;\r\n    }\r\n\r\n    public get id() {\r\n        return this._selectedPointId;\r\n    }\r\n\r\n    public getIdFromSelectedPoint() {\r\n        return \"\" + GCEngine.previewPoint!.x + \",\" + GCEngine.previewPoint!.y + \",\" + GCEngine.previewPoint!.z;\r\n    }\r\n\r\n    public get point(): Vec {\r\n        return GCEngine.previewPoint!;\r\n    }\r\n\r\n    public delete = () => {\r\n        const id = this.getIdFromSelectedPoint();\r\n        GCEngine.deletePointFromDrawing(id);\r\n    }\r\n\r\n    public set = () => {\r\n        if (GCEngine.previewPoint) {\r\n            const newId = this.getIdFromSelectedPoint();\r\n            if (GCEngine.drawing.points[newId]) return null;\r\n            GCEngine.deletePointFromDrawing(this._selectedPointId!);\r\n            this._selectedPointId = newId;\r\n            GCEngine.addPointToDrawing({x: GCEngine.previewPoint.x, y: GCEngine.previewPoint.y, z: GCEngine.previewPoint.z});\r\n            GCEngine.draw();\r\n        }\r\n    }\r\n\r\n    public copy = () => {\r\n        if (GCEngine.previewPoint) {\r\n            // Check to see that no other point is occupying the same Vec position\r\n            if (this._getPointFromDrawing(GCEngine.previewPoint.x, GCEngine.previewPoint.y, GCEngine.previewPoint.z)) {\r\n                console.warn(\"Point occupied!\");\r\n            } else {\r\n                GCEngine.addPointToDrawing({x: GCEngine.previewPoint.x, y: GCEngine.previewPoint.y, z: GCEngine.previewPoint.z});\r\n                GCEngine.draw();\r\n            }\r\n        }\r\n    }\r\n\r\n    public cleanUp = () => {\r\n        GCEngine.previewPoint = null;\r\n        GCEngine.draw();\r\n    }\r\n\r\n    private _getPointFromDrawing(x: number, y: number, z: number) {\r\n        const id = \"\" + x + \",\" + y + \",\" + z;\r\n        if (!GCEngine.drawing.points[id]) return null;\r\n        return GCEngine.drawing.points[id]\r\n    }\r\n}\r\n\r\nexport interface SelectedPointProp {\r\n    instance: SelectedPoint;\r\n    killInstance: () => void;\r\n}\r\n\r\nexport const SelectedPointFC: React.FC<SelectedPointProp> = (props) => {\r\n    const {instance, killInstance} = props;\r\n    GCEngine.draw();\r\n    return (\r\n        <div className=\"dialog\">\r\n            <h2>Selected Point</h2>\r\n            <button onClick={() => {instance.delete(); killInstance()}}>Delete</button>\r\n            <button onClick={() => instance.set()}>Set</button>\r\n            <button onClick={() => instance.copy()}>Copy</button>\r\n            <div>\r\n                <GenericNumberInput label={\"X\"} min={-99999} max={99999} step={0.01} value={instance.point.x} returnValue={(val) => {instance.point!.x = val; GCEngine.draw()}} />\r\n                <GenericNumberInput label={\"Y\"} min={-99999} max={99999} step={0.01} value={instance.point.y} returnValue={(val) => {instance.point!.y = val; GCEngine.draw()}} />\r\n                <GenericNumberInput label={\"Z\"} min={-99999} max={99999} step={0.01} value={instance.point.z} returnValue={(val) => {instance.point!.z = val; GCEngine.draw()}} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport GCEngine, {Settings} from \"./GCEngine\";\r\nimport {GenericNumberInput} from \"./GenericNumberInput\";\r\n\r\nexport class SettingsDialog {\r\n    private _settings: Settings;\r\n    constructor() {\r\n        this._settings = GCEngine.getSettings();\r\n    }\r\n\r\n    public get settings() {\r\n        return this._settings;\r\n    }\r\n\r\n    public handleSettings = (key: string, value: number) => {\r\n        if (this._settings) {\r\n            let settingsCopy: Settings = {...this._settings};\r\n            switch (key) {\r\n                case \"rotation\": settingsCopy.rotation = value; break;\r\n                case \"elevation\": settingsCopy.elevation = value; break;\r\n                case \"distance\": settingsCopy.distance = value; break;\r\n                case \"picturePlane\": settingsCopy.picturePlane = value; break;\r\n                case \"offsetH\": settingsCopy.offsetH = value; break;\r\n                case \"offsetV\": settingsCopy.offsetV = value; break;\r\n            }\r\n            GCEngine.setSettings(settingsCopy);\r\n            this._settings = settingsCopy;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface SettingsDialogFCProps {\r\n    instance: SettingsDialog;\r\n    killInstance: () => void;\r\n}\r\n\r\nexport const SettingsDialogFC: React.FC<SettingsDialogFCProps> = (props) => {\r\n    const {instance} = props;\r\n    return (\r\n        <div className={\"dialog\"} onMouseDown={e => e.stopPropagation()} onMouseMove={e => e.stopPropagation()}>\r\n            <h2>Perspektive Settings</h2>\r\n            <GenericNumberInput label={\"Rotation\"} min={0} max={359} step={5} value={instance.settings.rotation} returnValue={(val) => instance.handleSettings(\"rotation\", val)} />\r\n            <GenericNumberInput label={\"Elevation\"} min={-90} max={90} step={5} value={instance.settings.elevation} returnValue={(val) => instance.handleSettings(\"elevation\", val)} />\r\n            <GenericNumberInput label={\"Distance\"} min={0} max={999999} step={50} value={instance.settings.distance} returnValue={(val) => instance.handleSettings(\"distance\", val)} />\r\n            <GenericNumberInput label={\"Distance to Picture Plane\"} min={0} max={999999} step={50} value={instance.settings.picturePlane} returnValue={(val) => instance.handleSettings(\"picturePlane\", val)} />\r\n            <GenericNumberInput label={\"Offset Horisontal\"} min={0} max={999999} step={5} value={instance.settings.offsetH} returnValue={(val) => instance.handleSettings(\"offsetH\", val)} />\r\n            <GenericNumberInput label={\"Offset Vertical\"} min={0} max={999999} step={5} value={instance.settings.offsetV} returnValue={(val) => instance.handleSettings(\"offsetV\", val)} />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport GCEngine from \"./GCEngine\";\r\nimport GCView from \"./GCView\";\r\nimport {NewPoint, NewPointFC} from \"./NewPoint\";\r\nimport {SelectedPointFC, SelectedPoint} from \"./SelectedPoint\";\r\nimport {SettingsDialogFC, SettingsDialog} from \"./SettingsDialog\";\r\nimport \"./App.css\";\r\n\r\nconst App: React.FC = () => {\r\n\t// Show/hide settings\r\n\tconst [settingsInstance, setSettingsInstance] = React.useState<SettingsDialog | null>(null);\r\n\r\n\tconst toggleSettings = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (settingsInstance) {\r\n\t\t\tsetSettingsInstance(null);\r\n\t\t} else {\r\n\t\t\tsetSettingsInstance(new SettingsDialog());\r\n\t\t}\r\n\t\tshowAddPoint(null);\r\n\t\tif (selectedPointInstance) {\r\n\t\t\tselectedPointInstance.cleanUp();\r\n\t\t\tselectPoint(null);\r\n\t\t}\r\n\t}\r\n\r\n\t// Pan\r\n\tconst [mousePos, mouseMoved] = React.useState<{x: number, y: number} | null>(null);\r\n\r\n\tconst handleMouseMove = (event: React.MouseEvent) => {\r\n\t\tif (event.buttons === 1) {\r\n\t\t\tmouseMoved({x: event.movementX, y: event.movementY});\r\n\t\t} else if (mousePos) {\r\n\t\t\tmouseMoved(null);\r\n\t\t}\r\n\t}\r\n\r\n\t// Zoom\r\n\tconst [scale, setScale] = React.useState(1);\r\n\r\n\tconst handleZoom = (event: React.WheelEvent) => {\r\n\t\tlet newScale = scale - event.deltaY * 0.0005;\r\n\t\tif (newScale < 0.2) newScale = 0.2;\r\n\t\tsetScale(newScale);\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => { GCEngine.setScale(scale) },\r\n\t\t[scale]\r\n\t);\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tmousePos && GCEngine.pan(mousePos.x, mousePos.y);\r\n\t\t\tGCEngine.draw();\r\n\r\n\t\t\tconst onResize = () => {\r\n\t\t\t\tGCEngine.setCanvasSize();\r\n\t\t\t\tGCEngine.draw();\r\n\t\t\t}\r\n\t\r\n\t\t\twindow.addEventListener('resize', onResize);\r\n\t\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('resize', onResize);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[mousePos]\r\n\t);\r\n\r\n\t// Handle touch events for zooming and scaling\r\n\tconst [touchRefPoint, setTouchRefPoint] = React.useState<[number, number]>([-1, -1]);\r\n\tconst [touchMovement, setTouchMovement] = React.useState<[number, number]>([0, 0]);\r\n\tconst [touchDistance, setTouchDistance] = React.useState<number>(0);\r\n\tconst [lastTouchDistance, setLastTouchDistance] = React.useState<number>(0);\r\n\r\n\tconst handleTouchStart = (event: React.TouchEvent) => {\r\n\t\tif (event.touches.length === 2) {\r\n\t\t\tconst deltaX = event.touches[1].clientX - event.touches[0].clientX;\r\n\t\t\tconst deltaY = event.touches[1].clientY - event.touches[0].clientY;\r\n\t\t\tconst distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n\t\t\tsetTouchDistance(0);\r\n\t\t\tsetLastTouchDistance(distance);\r\n\t\t}\r\n\t\tif (event.touches.length === 1) {\r\n\t\t\tsetTouchRefPoint([event.touches[0].clientX, event.touches[0].clientY]);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleTouchEnd = (event: React.TouchEvent) => {\r\n\t\tif (event.touches.length === 1) {\r\n\t\t\tsetTouchDistance(0);\r\n\t\t\tsetLastTouchDistance(0);\r\n\t\t\tsetTouchRefPoint([event.touches[0].clientX, event.touches[0].clientY]);\r\n\t\t}\r\n\t\tsetTouchMovement([0, 0]);\r\n\t}\r\n\r\n\tconst handleTouchMove = (event: React.TouchEvent) => {\r\n\t\tif (event.touches.length > 1) {\r\n\t\t\tconst deltaX2 = event.touches[1].clientX - event.touches[0].clientX;\r\n\t\t\tconst deltaY2 = event.touches[1].clientY - event.touches[0].clientY;\r\n\t\t\tconst distance = Math.sqrt(deltaX2 * deltaX2 + deltaY2 * deltaY2);\r\n\t\t\tconst delta = distance - lastTouchDistance;\r\n\t\t\tsetTouchDistance(delta);\r\n\t\t\tsetLastTouchDistance(distance);\r\n\t\t} else {\r\n\t\t\tconst deltaX = Math.ceil(event.touches[0].clientX - touchRefPoint[0]);\r\n\t\t\tconst deltaY = Math.ceil(event.touches[0].clientY - touchRefPoint[1]);\r\n\t\t\tsetTouchRefPoint([touchRefPoint[0] + deltaX, touchRefPoint[1] + deltaY]);\r\n\t\t\tsetTouchMovement([deltaX, deltaY]);\r\n\t\t\tsetTouchDistance(0);\r\n\t\t\tsetLastTouchDistance(0);\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tif (touchDistance !== 0) {\r\n\t\t\t\tconst curScale = GCEngine.getScale();\r\n\t\t\t\tlet newScale = curScale + touchDistance * 0.001;\r\n\t\t\t\tif (newScale < 0.2) newScale = 0.2;\r\n\t\t\t\tGCEngine.setScale(newScale);\r\n\t\t\t} else {\r\n\t\t\t\ttouchMovement[0] !== 0 && touchMovement[1] !== 0 && GCEngine.pan(touchMovement[0] * window.devicePixelRatio, touchMovement[1] * window.devicePixelRatio);\r\n\t\t\t\tGCEngine.draw();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[touchMovement, touchDistance]\r\n\t);\r\n\r\n\t// Add a point to the drawing\r\n\tconst [addPointInstance, showAddPoint] = React.useState<NewPoint | null>(null);\r\n\tconst addPoint = () => {\r\n\t\tif (selectedPointInstance) {\r\n\t\t\tselectedPointInstance.cleanUp();\r\n\t\t\tselectPoint(null);\r\n\t\t}\r\n\t\tsetSettingsInstance(null);\r\n\t\tif (addPointInstance) showAddPoint(null);\r\n\t\telse showAddPoint(new NewPoint(0, 0, 0));\r\n\t}\r\n\r\n\t// Select point\r\n\tconst [selectedId, setSelectedId] = React.useState<string>(\"\");\r\n\tconst [selectedPointInstance, selectPoint] = React.useState<SelectedPoint | null>(null);\r\n\tconst trySelectPoint = (event: React.MouseEvent) => {\r\n\t\t// Close settings and add point panels\r\n\t\tsetSettingsInstance(null);\r\n\t\tshowAddPoint(null);\r\n\r\n\t\t// Reset any currently selected point\r\n\t\tif (selectedPointInstance) {\r\n\t\t\tselectedPointInstance.cleanUp();\r\n\t\t\tselectPoint(null);\r\n\t\t}\r\n\r\n\t\tsetSelectedId( SelectedPoint.pointIdAtPosition({h: event.clientX, v: event.clientY}) );\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tif (selectedId !== \"\") {\r\n\t\t\t\tconst sel = new SelectedPoint(selectedId);\r\n\t\t\t\tselectPoint(sel);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[selectedId]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"App\"\r\n\t\t\tonMouseMove={(e) => handleMouseMove(e)}\r\n\t\t\tonWheel={(e) => handleZoom(e)}\r\n\t\t\tonTouchStart={(e) => {handleTouchStart(e)}}\r\n\t\t\tonTouchEnd={(e) => {handleTouchEnd(e)}}\r\n\t\t\tonTouchMove={(e) => {handleTouchMove(e)}}\r\n\t\t>\r\n\t\t\t<GCView onClick={(e) => trySelectPoint(e)} />\r\n\r\n\t\t\t<div className=\"menu\">\r\n\t\t\t\t<button onClick={toggleSettings}>{settingsInstance ? \"Back\" : \"Settings\"}</button>\r\n\t\t\t\t<button onClick={addPoint}>Add point</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{settingsInstance && <SettingsDialogFC instance={settingsInstance} killInstance={() => setSettingsInstance(null)} />}\r\n\t\t\t{addPointInstance && <NewPointFC instance={addPointInstance} killInstance={() => {addPointInstance.cleanUp(); showAddPoint(null)}} />}\r\n\t\t\t{selectedPointInstance && <SelectedPointFC instance={selectedPointInstance} killInstance={() => {selectedPointInstance.cleanUp(); selectPoint(null); setSelectedId(\"\")}} />}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}