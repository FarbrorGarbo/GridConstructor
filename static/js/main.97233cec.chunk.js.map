{"version":3,"sources":["GCEngine.ts","data.ts","GCView.tsx","App.tsx","index.tsx"],"names":["_settings","_drawing","_canvasElm","_cxt","_scale","_pan","_getPersistentSettings","localStorageData","localStorage","getItem","JSON","parse","_getInitialSettings","_readPersistentDrawing","points","x","y","z","_degrees_to_radians","degrees","Math","PI","this","h","window","innerWidth","v","innerHeight","rotation","elevation","distance","picturePlane","offsetH","offsetV","docSize","width","height","settings","useScale","line","color","calcPointA","_project","start","calcPointB","end","strokeStyle","beginPath","moveTo","lineTo","stroke","drawAxis","lines","forEach","_drawLine","point","rot","elev","n","sin","cos","a","b","c","H","V","setItem","stringify","getContext","scale","draw","devicePixelRatio","canvasElm","document","addEventListener","e","preventDefault","passive","console","warn","fillStyle","fillRect","calcPoint1","calcPoint2","_drawGizmo","key","calc","arc","GCView","React","useRef","useLayoutEffect","canvas","current","GCEngine","registerCanvas","className","ref","GenericNumberInput","props","inputRef","useState","value","setValue","returnValue","useEffect","label","type","min","max","step","onChange","newValue","parseInt","updateValue","toString","App","getSettings","updateSettings","handleSettings","settingsCopy","setSettings","showSettings","toggle","mousePos","mouseMoved","setScale","pan","onResize","setCanvasSize","removeEventListener","touchRefPoint","setTouchRefPoint","touchMovement","setTouchMovement","touchDistance","setTouchDistance","lastTouchDistance","setLastTouchDistance","newScale","getScale","touchCount","setTouches","onMouseMove","event","buttons","movementX","movementY","onWheel","deltaY","handleZoom","onTouchStart","touches","length","deltaX","clientX","clientY","sqrt","handleTouchStart","onTouchEnd","onTouchMove","deltaX2","deltaY2","handleTouchMove","onClick","onMouseDown","stopPropagation","val","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.97233cec.chunk.js","sourcesContent":["// The GridConstructor 3d engine\r\nimport {gizmoLines} from \"./data\";\r\n\r\nclass GCEngine {\r\n    private _settings: Settings;\r\n    private _drawing: Drawing;\r\n    private _canvasElm: HTMLCanvasElement | undefined;\r\n    private _cxt: CanvasRenderingContext2D | null;\r\n    private _scale: number;\r\n    private _pan: {h: number, v: number};\r\n\r\n    constructor () {\r\n        this._settings = this._getPersistentSettings();\r\n        this._drawing = this._readPersistentDrawing();\r\n        this._scale = 1;\r\n        this._pan = {h: window.innerWidth/2, v: -window.innerHeight/2};\r\n        this._cxt = null;\r\n    }\r\n\r\n    private _getInitialSettings () : Settings {\r\n        return {\r\n            rotation: 0,\r\n            elevation: 0,\r\n            distance: 1000,\r\n            picturePlane: 1000,\r\n            offsetH: 1754,\r\n            offsetV: 1240,\r\n            docSize: {width: 3508, height: 2480} // A4 portrait in 300 ppi\r\n        }\r\n    }\r\n\r\n    private _getPersistentSettings = () => {\r\n        // localStorage.setItem(\"gc_settings\", \"\");\r\n        const localStorageData: string | null = localStorage.getItem(\"gc_settings\");\r\n        const value = !localStorageData\r\n                ? this._getInitialSettings()\r\n                : JSON.parse(localStorageData);\r\n    \r\n        return value;\r\n    }\r\n    \r\n    private _readPersistentDrawing = () => {\r\n        const localStorageData: string | null = localStorage.getItem(\"gc_current_drawing\");\r\n        const value = !localStorageData\r\n                ? {\t// Default empty drawing with one point i origo\r\n                    points: {\r\n                        \"x0_y0_z0\": {x: 0, y: 0, z: 0}\r\n                    }\r\n                }\r\n                : JSON.parse(localStorageData);\r\n    \r\n        return value;\r\n    }\r\n\r\n    private _degrees_to_radians = (degrees: number) => {\r\n      return degrees * (Math.PI / 180);\r\n    }\r\n\r\n    private _drawLine(settings: Settings, useScale: boolean = true, line: Line, color: string) {\r\n        const calcPointA = this._project(settings, line.start, useScale);\r\n        const calcPointB = this._project(settings, line.end, useScale);\r\n        this._cxt!.strokeStyle = color;\r\n        this._cxt!.beginPath();\r\n        this._cxt!.moveTo(calcPointA.h, this._canvasElm!.height - calcPointA.v);\r\n        this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n        this._cxt!.stroke();\r\n    };\r\n\r\n    private _drawGizmo() {\r\n        if (!this._cxt) return;\r\n        let settings = {...this._settings};\r\n        settings.distance = 1000;\r\n        settings.picturePlane = 1000;\r\n\r\n        const drawAxis = (color: string, lines: Line[]) => {\r\n            this._cxt!.strokeStyle = color;\r\n            lines.forEach(line => {\r\n                this._drawLine(settings, false, line, color);\r\n            });\r\n        }\r\n\r\n        const lines = gizmoLines();\r\n        drawAxis(\"#f00\", lines[0]);\r\n        drawAxis(\"#0f0\", lines[1]);\r\n        drawAxis(\"#00f\", lines[2]);\r\n    }\r\n\r\n    private _project (settings: Settings = this._settings, point: Vec, useScale: boolean = true) : Point {\r\n        const rot = this._degrees_to_radians(settings.rotation);\r\n        const elev = this._degrees_to_radians(settings.elevation);\r\n        const n = point.x * Math.sin(rot) + point.y * Math.cos(rot);\r\n        const a = point.x * Math.cos(rot) - point.y * Math.sin(rot);\r\n        const b = n * Math.cos(elev) - point.z * Math.sin(elev);\r\n        const c = n * Math.sin(elev) + point.z * Math.cos(elev);\r\n        const H = settings.picturePlane * a / (settings.distance + b); // + settings.offsetH;\r\n        const V = settings.picturePlane * c / (settings.distance + b); // + settings.offsetV;\r\n\r\n        if (useScale)  return {h: H * this._scale + this._pan.h, v: V * this._scale - this._pan.v};\r\n        return {h: H + this._pan.h, v: V - this._pan.v};\r\n    }\r\n\r\n    public getSettings(): Settings {\r\n        return this._settings;\r\n    }\r\n\r\n    public setSettings(settings: Settings) {\r\n        this._settings = settings;\r\n        localStorage.setItem(\"gc_settings\", JSON.stringify(settings));\r\n    }\r\n\r\n    public setCanvasSize() {\r\n        if (this._canvasElm && this._canvasElm.getContext) {\r\n            this._canvasElm.width = window.innerWidth;\r\n            this._canvasElm.height = window.innerHeight;\r\n        }\r\n    }\r\n\r\n    public getScale() {\r\n        return this._scale;\r\n    }\r\n\r\n    public setScale(scale: number) {\r\n        this._scale = scale;\r\n        this.draw();\r\n    }\r\n\r\n    public pan(x: number, y: number) {\r\n        this._pan.h += x / window.devicePixelRatio ;\r\n        this._pan.v += y / window.devicePixelRatio;\r\n    }\r\n\r\n    public registerCanvas(canvasElm: HTMLCanvasElement) {\r\n        if (canvasElm && canvasElm.getContext) {\r\n            this._canvasElm = canvasElm;\r\n            this._canvasElm.width = window.innerWidth;\r\n            this._canvasElm.height = window.innerHeight;\r\n            this._cxt = this._canvasElm.getContext(\"2d\");\r\n            this._scale = 1;\r\n\r\n            document.addEventListener(\r\n                \"touchstart\",\r\n                function(e){ e.preventDefault() },\r\n                {passive: false}\r\n            );\r\n\r\n            this._canvasElm.addEventListener(\r\n                \"touchstart\",\r\n                function(e){ e.preventDefault() },\r\n                {passive: false}\r\n            );\r\n        } else {\r\n            console.warn(\"Registered canvase element is not of type <canvas>!\");\r\n        }\r\n    }\r\n\r\n    public draw() { // settings: Settings = this._settings, drawing?: Drawing) {\r\n        if (this._canvasElm && this._cxt) {\r\n\t\t\tthis._canvasElm.width = window.innerWidth; // settings.viewPortSize.width;\r\n            this._canvasElm.height = window.innerHeight; // settings.viewPortSize.height;\r\n\r\n            // Clear by drawing document background\r\n            this._cxt.fillStyle = \"rgb(231, 230, 227)\";\r\n            this._cxt.fillRect(0, 0, this._canvasElm.width, this._canvasElm.height);\r\n\r\n            // Draw size of document\r\n            let settings = {...this._settings};\r\n            settings.rotation = 0;\r\n            settings.elevation = 0;\r\n            settings.picturePlane = settings.distance;\r\n            this._cxt.fillStyle = \"rgb(245,245,245)\";\r\n            const calcPoint1 = this._project(settings, {x:0, y:0, z:settings.docSize.height});\r\n            const calcPoint2 = this._project(settings, {x:settings.docSize.width, y:0, z:0});\r\n            this._cxt.fillRect(calcPoint1.h - settings.offsetH * this._scale, this._canvasElm!.height - calcPoint1.v + settings.offsetV * this._scale, calcPoint2.h - calcPoint1.h, calcPoint1.v - calcPoint2.v);\r\n\r\n            this._cxt.strokeStyle = \"#aaa\";\r\n            const lines = [\r\n                [{x:0, y:0, z:0}, {x:settings.docSize.width, y:0, z: 0}],\r\n                [{x:0, y:0, z:settings.docSize.height}, {x:settings.docSize.width, y:0, z: settings.docSize.height}],\r\n                [{x:0, y:0, z:0}, {x:0, y:0, z: this._settings.docSize.height}],\r\n                [{x:settings.docSize.width, y:0, z:0}, {x:settings.docSize.width, y:0, z: settings.docSize.height}],\r\n            ]\r\n\r\n            lines.forEach(line => {\r\n                const calcPointA = this._project(settings, line[0]);\r\n                const calcPointB = this._project(settings, line[1]);\r\n                this._cxt!.beginPath();\r\n                this._cxt!.moveTo(calcPointA.h - settings.offsetH * this._scale, this._canvasElm!.height - calcPointA.v + settings.offsetV * this._scale);\r\n                this._cxt!.lineTo(calcPointB.h - settings.offsetH * this._scale, this._canvasElm!.height - calcPointB.v + settings.offsetV * this._scale);\r\n                this._cxt!.stroke();\r\n            });\r\n\r\n            // Gizmo\r\n            this._drawGizmo();\r\n\r\n            this._cxt.strokeStyle = \"#aaa\";\r\n            this._cxt.beginPath();\r\n\r\n            const cubeLines = [\r\n                [{x:-100, y:-100, z:-100}, {x:100, y:-100, z:-100}],\r\n                [{x:-100, y:100, z:-100}, {x:100, y:100, z:-100}],\r\n                [{x:-100, y:-100, z:100}, {x:100, y:-100, z:100}],\r\n                [{x:-100, y:100, z:100}, {x:100, y:100, z:100}],\r\n\r\n                [{x:-100, y:-100, z:-100}, {x:-100, y:-100, z:100}],\r\n                [{x:100, y:-100, z:-100}, {x:100, y:-100, z:100}],\r\n                [{x:100, y:100, z:-100}, {x:100, y:100, z:100}],\r\n                [{x:-100, y:100, z:-100}, {x:-100, y:100, z:100}],\r\n                \r\n                [{x:-100, y:-100, z:100}, {x:-100, y:100, z:100}],\r\n                [{x:100, y:-100, z:100}, {x:100, y:100, z:100}],\r\n                [{x:-100, y:-100, z:-100}, {x:-100, y:100, z:-100}],\r\n                [{x:100, y:-100, z:-100}, {x:100, y:100, z:-100}]\r\n            ]\r\n            cubeLines.forEach(line => {\r\n                this._drawLine(this._settings, true, {start: line[0], end: line[1]}, \"#aaa\");\r\n            });\r\n            this._cxt.stroke();\r\n\r\n            if (this._drawing) {\r\n                this._cxt.strokeStyle = \"#000\";\r\n                for (const key in this._drawing.points) {\r\n                    const calc = this._project(this._settings, this._drawing.points[key]);\r\n                    this._cxt!.beginPath();\r\n                    this._cxt!.arc(calc.h, this._canvasElm!.height - calc.v, 5, 0, 2 * Math.PI);\r\n                    this._cxt!.stroke();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport type Settings = {\r\n    rotation: number,\r\n    elevation: number,\r\n    distance: number,\r\n    picturePlane: number,\r\n    offsetH: number,\r\n    offsetV: number,\r\n    docSize: {width: number, height: number}\r\n};\r\n\r\nexport type Vec = {\r\n    x: number,\r\n    y: number,\r\n    z: number\r\n};\r\n\r\nexport type Point = {\r\n    h: number,\r\n    v: number\r\n};\r\n\r\nexport type Line = {\r\n    start: Vec,\r\n    end: Vec\r\n};\r\n\r\nexport type Drawing = {\r\n    points: {\r\n        [key: string] : Vec\r\n    }\r\n}\r\n\r\nexport default new GCEngine ();\r\n\r\n","import {Line} from \"./GCEngine\";\r\n\r\nexport const gizmoLines = (): Line[][] => {\r\n\treturn [\r\n\t\t[\r\n\t\t\t{start: {x:0, y:0, z:0}, end: {x:100, y:0, z:0}},\r\n\t\t\t{start: {x:80, y:0, z:3}, end: {x:100, y:0, z:0}},\r\n\t\t\t{start: {x:80, y:0, z:-3}, end: {x:100, y:0, z:0}},\r\n\t\t\t{start: {x:80, y:3, z:0}, end: {x:100, y:0, z:0}},\r\n\t\t\t{start: {x:80, y:-3, z:0}, end: {x:100, y:0, z:0}}\r\n\t\t],\r\n\t\t[\r\n            {start: {x:0, y:0, z:0}, end: {x:0, y:100, z:0}},\r\n            {start: {x:3, y:80, z:0}, end: {x:0, y:100, z:0}},\r\n            {start: {x:-3, y:80, z:0}, end: {x:0, y:100, z:0}},\r\n            {start: {x:0, y:80, z:3}, end: {x:0, y:100, z:0}},\r\n            {start: {x:0, y:80, z:-3}, end: {x:0, y:100, z:0}}\r\n\t\t],\r\n\t\t[\r\n            {start: {x:0, y:0, z:0}, end: {x:0, y:0, z:100}},\r\n            {start: {x:3, y:0, z:80}, end: {x:0, y:0, z:100}},\r\n            {start: {x:-3, y:0, z:80}, end: {x:0, y:0, z:100}},\r\n            {start: {x:0, y:3, z:80}, end: {x:0, y:0, z:100}},\r\n            {start: {x:0, y:-3, z:80}, end: {x:0, y:0, z:100}}\r\n        ]\r\n\t];\r\n}","import React from \"react\";\r\nimport GCEngine from \"./GCEngine\";\r\n\r\nconst GCView: React.FC = () => {\r\n\tconst canvasElm = React.useRef<HTMLCanvasElement>(null);\r\n\r\n\t// Lifecycle ComponentDidMount: should only occur once and give us a persistant ref to the canvas.\r\n\tReact.useLayoutEffect(() => {\r\n\t\t// console.log(\"useLayout\", canvasElm);\r\n\t\tconst canvas = canvasElm.current;\r\n\t\tif (canvas)\r\n\t\t\tGCEngine.registerCanvas(canvas);\r\n\r\n\t}, []);\r\n\r\n  \treturn (\r\n\t\t<canvas\r\n\t\t\tclassName={\"canvas\"}\r\n\t\t\tref={canvasElm}\r\n\t\t/>\r\n  \t);\r\n}\r\n\r\nexport default GCView;\r\n","import React from \"react\";\r\nimport GCEngine, {Settings} from \"./GCEngine\";\r\nimport GCView from \"./GCView\";\r\nimport \"./App.css\";\r\n\r\nconst App: React.FC = () => {\r\n\t// Settings\r\n\tconst [settings, updateSettings] = React.useState<Settings>(GCEngine.getSettings());\r\n\r\n\tconst handleSettings = (key: string, value: number) => {\r\n\t\tif (settings) {\r\n\t\t\tlet settingsCopy: Settings = {...settings};\r\n\t\tswitch (key) {\r\n\t\t\tcase \"rotation\": settingsCopy.rotation = value; break;\r\n\t\t\tcase \"elevation\": settingsCopy.elevation = value; break;\r\n\t\t\tcase \"distance\": settingsCopy.distance = value; break;\r\n\t\t\tcase \"picturePlane\": settingsCopy.picturePlane = value; break;\r\n\t\t\tcase \"offsetH\": settingsCopy.offsetH = value; break;\r\n\t\t\tcase \"offsetV\": settingsCopy.offsetV = value; break;\r\n\t\t}\r\n\t\tif (JSON.stringify(settings) !== JSON.stringify(settingsCopy))\r\n\t\t\tupdateSettings(settingsCopy);\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => { GCEngine.setSettings(settings) },\r\n\t\t[settings]\r\n\t);\r\n\r\n\t// Show/hide settings\r\n\tconst [showSettings, toggle] = React.useState(false);\r\n\r\n\tconst toggleSettings = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\ttoggle(!showSettings);\r\n\t}\r\n\r\n\t// Pan\r\n\tconst [mousePos, mouseMoved] = React.useState<{x: number, y: number} | null>(null);\r\n\r\n\tconst handleMouseMove = (event: React.MouseEvent) => {\r\n\t\tif (event.buttons === 1) {\r\n\t\t\tmouseMoved({x: event.movementX, y: event.movementY});\r\n\t\t} else if (mousePos) {\r\n\t\t\tmouseMoved(null);\r\n\t\t}\r\n\t}\r\n\r\n\t// Zoom\r\n\tconst [scale, setScale] = React.useState(1);\r\n\r\n\tconst handleZoom = (event: React.WheelEvent) => {\r\n\t\tlet newScale = scale - event.deltaY * 0.0005;\r\n\t\tif (newScale < 0.2) newScale = 0.2;\r\n\t\tsetScale(newScale);\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => { GCEngine.setScale(scale) },\r\n\t\t[scale]\r\n\t);\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tmousePos && GCEngine.pan(mousePos.x, mousePos.y);\r\n\t\t\tGCEngine.draw();\r\n\r\n\t\t\tconst onResize = () => {\r\n\t\t\t\tGCEngine.setCanvasSize();\r\n\t\t\t\tGCEngine.draw();\r\n\t\t\t}\r\n\t\r\n\t\t\twindow.addEventListener('resize', onResize);\r\n\t\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('resize', onResize);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[mousePos, settings]\r\n\t);\r\n\r\n\t// Handle touch events for zooming and scaling\r\n\tconst [touchRefPoint, setTouchRefPoint] = React.useState<[number, number]>([-1, -1]);\r\n\tconst [touchMovement, setTouchMovement] = React.useState<[number, number]>([0, 0]);\r\n\tconst [touchDistance, setTouchDistance] = React.useState<number>(0);\r\n\tconst [lastTouchDistance, setLastTouchDistance] = React.useState<number>(0);\r\n\r\n\tconst handleTouchStart = (event: React.TouchEvent) => {\r\n\t\tsetTouches(event.touches.length);\r\n\t\tif (event.touches.length === 2) {\r\n\t\t\tconst deltaX = event.touches[1].clientX - event.touches[0].clientX;\r\n\t\t\tconst deltaY = event.touches[1].clientY - event.touches[0].clientY;\r\n\t\t\tconst distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n\t\t\tsetTouchDistance(0);\r\n\t\t\tsetLastTouchDistance(distance);\r\n\t\t}\r\n\t\tif (event.touches.length === 1) {\r\n\t\t\tsetTouchRefPoint([event.touches[0].clientX, event.touches[0].clientY]);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleTouchEnd = (event: React.TouchEvent) => {\r\n\t\tsetTouches(event.touches.length);\r\n\t\tif (event.touches.length === 1) {\r\n\t\t\tsetTouchDistance(0);\r\n\t\t\tsetLastTouchDistance(0);\r\n\t\t\tsetTouchRefPoint([event.touches[0].clientX, event.touches[0].clientY]);\r\n\t\t}\r\n\t\t// if (event.touches.length === 0) {\r\n\t\t\tsetTouchMovement([0, 0]);\r\n\t\t// }\r\n\t}\r\n\r\n\tconst handleTouchMove = (event: React.TouchEvent) => {\r\n\t\tif (event.touches.length > 1) {\r\n\t\t\tconst deltaX2 = event.touches[1].clientX - event.touches[0].clientX;\r\n\t\t\tconst deltaY2 = event.touches[1].clientY - event.touches[0].clientY;\r\n\t\t\tconst distance = Math.sqrt(deltaX2 * deltaX2 + deltaY2 * deltaY2);\r\n\t\t\tconst delta = distance - lastTouchDistance;\r\n\t\t\tsetTouchDistance(delta);\r\n\t\t\tsetLastTouchDistance(distance);\r\n\t\t} else {\r\n\t\t\tconst deltaX = event.touches[0].clientX - touchRefPoint[0];\r\n\t\t\tconst deltaY = event.touches[0].clientY - touchRefPoint[1];\r\n\t\t\tsetTouchRefPoint([touchRefPoint[0] + deltaX, touchRefPoint[1] + deltaY]);\r\n\t\t\tsetTouchMovement([deltaX, deltaY]);\r\n\t\t\tsetTouchDistance(0);\r\n\t\t\tsetLastTouchDistance(0);\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tif (touchDistance !== 0) {\r\n\t\t\t\tconst curScale = GCEngine.getScale();\r\n\t\t\t\tlet newScale = curScale + touchDistance * 0.001;\r\n\t\t\t\tif (newScale < 0.2) newScale = 0.2;\r\n\t\t\t\tGCEngine.setScale(newScale);\r\n\t\t\t} else {\r\n\t\t\t\ttouchMovement[0] !== 0 && touchMovement[1] !== 0 && GCEngine.pan(touchMovement[0], touchMovement[1]);\r\n\t\t\t\tGCEngine.draw();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[touchMovement, touchDistance]\r\n\t);\r\n\r\n\tconst [touchCount, setTouches] = React.useState(0);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"App\"\r\n\t\t\tonMouseMove={(e) => handleMouseMove(e)}\r\n\t\t\tonWheel={(e) => handleZoom(e)}\r\n\t\t\tonTouchStart={(e) => {handleTouchStart(e)}}\r\n\t\t\tonTouchEnd={(e) => {handleTouchEnd(e)}}\r\n\t\t\tonTouchMove={(e) => {handleTouchMove(e)}}\r\n\t\t>\r\n\t\t\t<GCView/>\r\n\r\n\t\t\t<div className=\"menu\">\r\n\t\t\t\t<button onClick={toggleSettings}>{showSettings ? \"Back\" : \"Settings\"}</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{showSettings &&\r\n\t\t\t<div className={\"settings\"} onMouseDown={e => e.stopPropagation()} onMouseMove={e => e.stopPropagation()}>\r\n\t\t\t\t<h2>Perspektive Settings</h2>\r\n\t\t\t\t<GenericNumberInput label={\"Rotation\"} min={0} max={359} step={5} value={settings.rotation} returnValue={(val) => handleSettings(\"rotation\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Elevation\"} min={-90} max={90} step={5} value={settings.elevation} returnValue={(val) => handleSettings(\"elevation\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Distance\"} min={0} max={999999} step={50} value={settings.distance} returnValue={(val) => handleSettings(\"distance\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Distance to Picture Plane\"} min={0} max={999999} step={50} value={settings.picturePlane} returnValue={(val) => handleSettings(\"picturePlane\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Offset Horisontal\"} min={0} max={999999} step={5} value={settings.offsetH} returnValue={(val) => handleSettings(\"offsetH\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Offset Vertical\"} min={0} max={999999} step={5} value={settings.offsetV} returnValue={(val) => handleSettings(\"offsetV\", val)} />\r\n\t\t\t</div>}\r\n\t\t\t<div className=\"touches\">{touchCount}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\ntype GenericNumberInputProps = {\r\n\tlabel: string;\r\n\tmin: number;\r\n\tmax: number;\r\n\tstep: number;\r\n\tvalue: number;\r\n\treturnValue(val: number): void;\r\n}\r\n\r\nconst GenericNumberInput: React.FC<GenericNumberInputProps> = (props) => {\r\n\tconst inputRef = React.useRef<HTMLInputElement>(null);\r\n\tconst [value, setValue] = React.useState(props.value);\r\n\r\n\tconst updateValue = () => {\r\n\t\tlet  newValue = parseInt(inputRef.current!.value === \"\" ? \"0\" : inputRef.current!.value);\r\n\t\tif (newValue < props.min) newValue = props.min;\r\n\t\telse if (newValue > props.max) newValue = props.max;\r\n\t\tsetValue(newValue);\r\n\t}\r\n\r\n\tconst {returnValue} = props;\r\n\r\n\tReact.useEffect( () => { returnValue(value) }, [returnValue, value] );\r\n\r\n\treturn (\r\n\t\t<label>{props.label}:\r\n\t\t\t<input\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tmin={props.min}\r\n\t\t\t\tmax={props.max}\r\n\t\t\t\tstep={props.step}\r\n\t\t\t\tonChange={() => updateValue()}\r\n\t\t\t\tvalue={value.toString()}\r\n\t\t\t/>\r\n\t\t</label>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}