{"version":3,"sources":["GCEngine.ts","data.ts","GCView.tsx","GenericNumberInput.tsx","NewPoint.tsx","SelectedPoint.tsx","SettingsDialog.tsx","App.tsx","index.tsx"],"names":["_version","_settings","_drawing","_canvasElm","_cxt","_scale","_pan","_getPersistentSettings","localStorageData","localStorage","getItem","JSON","parse","_getInitialSettings","_readPersistentDrawing","points","x","y","z","_degrees_to_radians","degrees","Math","PI","this","h","window","innerWidth","v","innerHeight","rotation","elevation","distance","picturePlane","offsetH","offsetV","docSize","width","height","settings","useScale","line","color","calcPointA","project","start","calcPointB","end","strokeStyle","beginPath","moveTo","lineTo","stroke","drawAxis","lines","forEach","_drawLine","point","rot","elev","n","sin","cos","a","b","c","H","V","vector","undefined","draw","id","stringify","setItem","getContext","scale","devicePixelRatio","canvasElm","console","log","warn","fillStyle","fillRect","calcPoint1","calcPoint2","_drawGizmo","key","calc","arc","clientHeight","GCView","props","React","useRef","useLayoutEffect","canvas","current","GCEngine","registerCanvas","className","ref","onClick","e","GenericNumberInput","inputRef","useState","value","setValue","returnValue","useEffect","label","type","min","max","step","onChange","newValue","parseInt","updateValue","toString","NewPoint","_x","_y","_z","callBack","addPointToDrawing","val","NewPointFC","instance","killInstance","create","SelectedPoint","selectionPos","_selectedPointId","_selectedPoint","delete","deletePointFromDrawing","getSettings","Object","keys","drawing","pos","deltaH","deltaV","heightOfDrawing","sqrt","SelectedPointFC","SettingsDialog","handleSettings","settingsCopy","setSettings","SettingsDialogFC","onMouseDown","stopPropagation","onMouseMove","App","settingsInstance","setSettingsInstance","mousePos","mouseMoved","setScale","pan","onResize","setCanvasSize","addEventListener","removeEventListener","touchRefPoint","setTouchRefPoint","touchMovement","setTouchMovement","touchDistance","setTouchDistance","lastTouchDistance","setLastTouchDistance","newScale","getScale","addPointInstance","showAddPoint","selectedPointInstance","selectPoint","event","buttons","movementX","movementY","onWheel","deltaY","handleZoom","onTouchStart","touches","length","deltaX","clientX","clientY","handleTouchStart","onTouchEnd","onTouchMove","deltaX2","deltaY2","ceil","handleTouchMove","sel","trySelectPoint","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32b03de6.chunk.js","sourcesContent":["// The GridConstructor 3d engine\r\nimport {gizmoLines} from \"./data\";\r\n\r\nclass GCEngine {\r\n    private _version: string;\r\n    private _settings: Settings;\r\n    private _drawing: Drawing;\r\n    private _canvasElm: HTMLCanvasElement | undefined;\r\n    private _cxt: CanvasRenderingContext2D | null;\r\n    private _scale: number;\r\n    private _pan: {h: number, v: number};\r\n\r\n    constructor () {\r\n        this._version = \"0.1.4\"\r\n        this._settings = this._getPersistentSettings();\r\n        this._drawing = this._readPersistentDrawing();\r\n        this._scale = 1;\r\n        this._pan = {h: window.innerWidth/2, v: -window.innerHeight/2};\r\n        this._cxt = null;\r\n    }\r\n\r\n    private _getInitialSettings () : Settings {\r\n        return {\r\n            rotation: 0,\r\n            elevation: 0,\r\n            distance: 1000,\r\n            picturePlane: 1000,\r\n            offsetH: 1754,\r\n            offsetV: 1240,\r\n            docSize: {width: 3508, height: 2480} // A4 portrait in 300 ppi\r\n        }\r\n    }\r\n\r\n    private _getPersistentSettings = () => {\r\n        // localStorage.setItem(\"gc_settings\", \"\");\r\n        const localStorageData: string | null = localStorage.getItem(\"gc_settings\");\r\n        const value = !localStorageData\r\n                ? this._getInitialSettings()\r\n                : JSON.parse(localStorageData);\r\n    \r\n        return value;\r\n    }\r\n    \r\n    private _readPersistentDrawing = () => {\r\n        const localStorageData: string | null = localStorage.getItem(\"gc_current_drawing\");\r\n        const value = !localStorageData\r\n                ? {\t// Default empty drawing with one point i origo\r\n                    points: {\r\n                        \"x0_y0_z0\": {x: 0, y: 0, z: 0}\r\n                    }\r\n                }\r\n                : JSON.parse(localStorageData);\r\n    \r\n        return value;\r\n    }\r\n\r\n    private _degrees_to_radians = (degrees: number) => {\r\n      return degrees * (Math.PI / 180);\r\n    }\r\n\r\n    private _drawLine(settings: Settings, useScale: boolean = true, line: Line, color: string) {\r\n        const calcPointA = this.project(settings, line.start, useScale);\r\n        const calcPointB = this.project(settings, line.end, useScale);\r\n        this._cxt!.strokeStyle = color;\r\n        this._cxt!.beginPath();\r\n        this._cxt!.moveTo(calcPointA.h, this._canvasElm!.height - calcPointA.v);\r\n        this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n        this._cxt!.stroke();\r\n    };\r\n\r\n    private _drawGizmo() {\r\n        if (!this._cxt) return;\r\n        let settings = {...this._settings};\r\n        settings.distance = 999999;\r\n        settings.picturePlane = 999999;\r\n\r\n        const drawAxis = (color: string, lines: Line[]) => {\r\n            this._cxt!.strokeStyle = color;\r\n            lines.forEach(line => {\r\n                this._drawLine(settings, false, line, color);\r\n            });\r\n        }\r\n\r\n        const lines = gizmoLines();\r\n        drawAxis(\"#f00\", lines[0]);\r\n        drawAxis(\"#0f0\", lines[1]);\r\n        drawAxis(\"#00f\", lines[2]);\r\n    }\r\n\r\n    public project(settings: Settings = this._settings, point: Vec, useScale: boolean = true) : Point {\r\n        const rot = this._degrees_to_radians(settings.rotation);\r\n        const elev = this._degrees_to_radians(settings.elevation);\r\n        const n = point.x * Math.sin(rot) + point.y * Math.cos(rot);\r\n        const a = point.x * Math.cos(rot) - point.y * Math.sin(rot);\r\n        const b = n * Math.cos(elev) - point.z * Math.sin(elev);\r\n        const c = n * Math.sin(elev) + point.z * Math.cos(elev);\r\n        const H = settings.picturePlane * a / (settings.distance + b); // + settings.offsetH;\r\n        const V = settings.picturePlane * c / (settings.distance + b); // + settings.offsetV;\r\n\r\n        if (useScale)  return {h: H * this._scale + this._pan.h, v: V * this._scale - this._pan.v};\r\n        return {h: H + this._pan.h, v: V - this._pan.v};\r\n    }\r\n\r\n    public get heightOfDrawing() {\r\n        return this._canvasElm!.clientHeight;\r\n    }\r\n\r\n    public get drawing() {\r\n        return this._drawing;\r\n    }\r\n\r\n    public addPointToDrawing(vector: Vec) {\r\n        if (this._drawing.points[\"x\" + vector.x + \"_y\" + vector.y + \"_z\" + vector.z] !== undefined) return null;\r\n        this._drawing.points[\"x\" + vector.x + \"_y\" + vector.y + \"_z\" + vector.z] = vector;\r\n        this.draw();\r\n    }\r\n\r\n    public deletePointFromDrawing(id: string) {\r\n        if (this._drawing.points[id]) {\r\n            delete this._drawing.points[id];\r\n            this.draw();\r\n        }\r\n    }\r\n\r\n    public getSettings(): Settings {\r\n        return this._settings;\r\n    }\r\n\r\n    public setSettings(settings: Settings) {\r\n        if (JSON.stringify(this._settings) !== JSON.stringify(settings)) {\r\n            this._settings = settings;\r\n            localStorage.setItem(\"gc_settings\", JSON.stringify(this._settings));\r\n            this.draw();\r\n\t\t}\r\n    }\r\n\r\n    public setCanvasSize() {\r\n        if (this._canvasElm && this._canvasElm.getContext) {\r\n            this._canvasElm.width = window.innerWidth;\r\n            this._canvasElm.height = window.innerHeight;\r\n        }\r\n    }\r\n\r\n    public getScale() {\r\n        return this._scale;\r\n    }\r\n\r\n    public setScale(scale: number) {\r\n        this._scale = scale;\r\n        this.draw();\r\n    }\r\n\r\n    public pan(x: number, y: number) {\r\n        this._pan.h += x / window.devicePixelRatio ;\r\n        this._pan.v += y / window.devicePixelRatio;\r\n    }\r\n\r\n    public registerCanvas(canvasElm: HTMLCanvasElement) {\r\n        if (canvasElm && canvasElm.getContext) {\r\n            this._canvasElm = canvasElm;\r\n            this._canvasElm.width = window.innerWidth;\r\n            this._canvasElm.height = window.innerHeight;\r\n            this._cxt = this._canvasElm.getContext(\"2d\");\r\n            this._scale = 1;\r\n            console.log(\"version\", this._version);\r\n        } else {\r\n            console.warn(\"Registered canvase element is not of type <canvas>!\");\r\n        }\r\n    }\r\n\r\n    public draw() { // settings: Settings = this._settings, drawing?: Drawing) {\r\n        if (this._canvasElm && this._cxt) {\r\n\t\t\tthis._canvasElm.width = window.innerWidth; // settings.viewPortSize.width;\r\n            this._canvasElm.height = window.innerHeight; // settings.viewPortSize.height;\r\n\r\n            // Clear by drawing document background\r\n            this._cxt.fillStyle = \"rgb(231, 230, 227)\";\r\n            this._cxt.fillRect(0, 0, this._canvasElm.width, this._canvasElm.height);\r\n\r\n            // Draw size of document\r\n            let settings = {...this._settings};\r\n            settings.rotation = 0;\r\n            settings.elevation = 0;\r\n            settings.picturePlane = settings.distance;\r\n            this._cxt.fillStyle = \"rgb(245,245,245)\";\r\n            const calcPoint1 = this.project(settings, {x:0, y:0, z:settings.docSize.height});\r\n            const calcPoint2 = this.project(settings, {x:settings.docSize.width, y:0, z:0});\r\n            this._cxt.fillRect(calcPoint1.h - settings.offsetH * this._scale, this._canvasElm!.height - calcPoint1.v + settings.offsetV * this._scale, calcPoint2.h - calcPoint1.h, calcPoint1.v - calcPoint2.v);\r\n\r\n            this._cxt.strokeStyle = \"#aaa\";\r\n            const lines = [\r\n                [{x:0, y:0, z:0}, {x:settings.docSize.width, y:0, z: 0}],\r\n                [{x:0, y:0, z:settings.docSize.height}, {x:settings.docSize.width, y:0, z: settings.docSize.height}],\r\n                [{x:0, y:0, z:0}, {x:0, y:0, z: this._settings.docSize.height}],\r\n                [{x:settings.docSize.width, y:0, z:0}, {x:settings.docSize.width, y:0, z: settings.docSize.height}],\r\n            ]\r\n\r\n            lines.forEach(line => {\r\n                const calcPointA = this.project(settings, line[0]);\r\n                const calcPointB = this.project(settings, line[1]);\r\n                this._cxt!.beginPath();\r\n                this._cxt!.moveTo(calcPointA.h - settings.offsetH * this._scale, this._canvasElm!.height - calcPointA.v + settings.offsetV * this._scale);\r\n                this._cxt!.lineTo(calcPointB.h - settings.offsetH * this._scale, this._canvasElm!.height - calcPointB.v + settings.offsetV * this._scale);\r\n                this._cxt!.stroke();\r\n            });\r\n\r\n            // Gizmo\r\n            this._drawGizmo();\r\n\r\n            this._cxt.strokeStyle = \"#aaa\";\r\n            this._cxt.beginPath();\r\n\r\n            const cubeLines = [\r\n                [{x:-100, y:-100, z:-100}, {x:100, y:-100, z:-100}],\r\n                [{x:-100, y:100, z:-100}, {x:100, y:100, z:-100}],\r\n                [{x:-100, y:-100, z:100}, {x:100, y:-100, z:100}],\r\n                [{x:-100, y:100, z:100}, {x:100, y:100, z:100}],\r\n\r\n                [{x:-100, y:-100, z:-100}, {x:-100, y:-100, z:100}],\r\n                [{x:100, y:-100, z:-100}, {x:100, y:-100, z:100}],\r\n                [{x:100, y:100, z:-100}, {x:100, y:100, z:100}],\r\n                [{x:-100, y:100, z:-100}, {x:-100, y:100, z:100}],\r\n                \r\n                [{x:-100, y:-100, z:100}, {x:-100, y:100, z:100}],\r\n                [{x:100, y:-100, z:100}, {x:100, y:100, z:100}],\r\n                [{x:-100, y:-100, z:-100}, {x:-100, y:100, z:-100}],\r\n                [{x:100, y:-100, z:-100}, {x:100, y:100, z:-100}]\r\n            ]\r\n            cubeLines.forEach(line => {\r\n                this._drawLine(this._settings, true, {start: line[0], end: line[1]}, \"#aaa\");\r\n            });\r\n            this._cxt.stroke();\r\n\r\n            if (this._drawing) {\r\n                this._cxt.strokeStyle = \"#000\";\r\n                for (const key in this._drawing.points) {\r\n                    const calc = this.project(this._settings, this._drawing.points[key]);\r\n                    this._cxt!.beginPath();\r\n                    this._cxt!.arc(calc.h, this._canvasElm!.height - calc.v, 5, 0, 2 * Math.PI);\r\n                    this._cxt!.stroke();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport type Settings = {\r\n    rotation: number,\r\n    elevation: number,\r\n    distance: number,\r\n    picturePlane: number,\r\n    offsetH: number,\r\n    offsetV: number,\r\n    docSize: {width: number, height: number}\r\n};\r\n\r\nexport type Vec = {\r\n    x: number,\r\n    y: number,\r\n    z: number\r\n};\r\n\r\nexport type Point = {\r\n    h: number,\r\n    v: number\r\n};\r\n\r\nexport type Line = {\r\n    start: Vec,\r\n    end: Vec\r\n};\r\n\r\nexport type Drawing = {\r\n    points: {\r\n        [key: string] : Vec\r\n    }\r\n}\r\n\r\nexport default new GCEngine ();\r\n\r\n","import {Line} from \"./GCEngine\";\r\n\r\nexport const gizmoLines = (): Line[][] => {\r\n\treturn [\r\n\t\t[\r\n\t\t\t{start: {x:0, y:0, z:0}, end: {x:100, y:0, z:0}},\r\n\t\t\t{start: {x:80, y:0, z:3}, end: {x:100, y:0, z:0}},\r\n\t\t\t{start: {x:80, y:0, z:-3}, end: {x:100, y:0, z:0}},\r\n\t\t\t{start: {x:80, y:3, z:0}, end: {x:100, y:0, z:0}},\r\n\t\t\t{start: {x:80, y:-3, z:0}, end: {x:100, y:0, z:0}}\r\n\t\t],\r\n\t\t[\r\n            {start: {x:0, y:0, z:0}, end: {x:0, y:100, z:0}},\r\n            {start: {x:3, y:80, z:0}, end: {x:0, y:100, z:0}},\r\n            {start: {x:-3, y:80, z:0}, end: {x:0, y:100, z:0}},\r\n            {start: {x:0, y:80, z:3}, end: {x:0, y:100, z:0}},\r\n            {start: {x:0, y:80, z:-3}, end: {x:0, y:100, z:0}}\r\n\t\t],\r\n\t\t[\r\n            {start: {x:0, y:0, z:0}, end: {x:0, y:0, z:100}},\r\n            {start: {x:3, y:0, z:80}, end: {x:0, y:0, z:100}},\r\n            {start: {x:-3, y:0, z:80}, end: {x:0, y:0, z:100}},\r\n            {start: {x:0, y:3, z:80}, end: {x:0, y:0, z:100}},\r\n            {start: {x:0, y:-3, z:80}, end: {x:0, y:0, z:100}}\r\n        ]\r\n\t];\r\n}","import React from \"react\";\r\nimport GCEngine from \"./GCEngine\";\r\n\r\nconst GCView: React.FC<{onClick: (e: React.MouseEvent) => void}> = (props) => {\r\n\tconst canvasElm = React.useRef<HTMLCanvasElement>(null);\r\n\r\n\t// Lifecycle ComponentDidMount: should only occur once and give us a persistant ref to the canvas.\r\n\tReact.useLayoutEffect(() => {\r\n\t\t// console.log(\"useLayout\", canvasElm);\r\n\t\tconst canvas = canvasElm.current;\r\n\t\tif (canvas)\r\n\t\t\tGCEngine.registerCanvas(canvas);\r\n\r\n\t}, []);\r\n\r\n  \treturn (\r\n\t\t<canvas\r\n\t\t\tclassName={\"canvas\"}\r\n\t\t\tref={canvasElm}\r\n\t\t\tonClick={(e) => {props.onClick(e)}}\r\n\t\t/>\r\n  \t);\r\n}\r\n\r\nexport default GCView;\r\n","import React from \"react\";\r\n\r\nexport type GenericNumberInputProps = {\r\n\tlabel: string;\r\n\tmin: number;\r\n\tmax: number;\r\n\tstep: number;\r\n\tvalue: number;\r\n\treturnValue(val: number): void;\r\n}\r\n\r\nexport const GenericNumberInput: React.FC<GenericNumberInputProps> = (props) => {\r\n\tconst inputRef = React.useRef<HTMLInputElement>(null);\r\n\tconst [value, setValue] = React.useState(props.value);\r\n\r\n\tconst updateValue = () => {\r\n\t\tlet  newValue = parseInt(inputRef.current!.value === \"\" ? \"0\" : inputRef.current!.value);\r\n\t\tif (newValue < props.min) newValue = props.min;\r\n\t\telse if (newValue > props.max) newValue = props.max;\r\n\t\tsetValue(newValue);\r\n\t}\r\n\r\n\tconst {returnValue} = props;\r\n\r\n\tReact.useEffect( () => { returnValue(value) }, [returnValue, value] );\r\n\r\n\treturn (\r\n\t\t<label>{props.label}:\r\n\t\t\t<input\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tmin={props.min}\r\n\t\t\t\tmax={props.max}\r\n\t\t\t\tstep={props.step}\r\n\t\t\t\tonChange={() => updateValue()}\r\n\t\t\t\tvalue={value.toString()}\r\n\t\t\t/>\r\n\t\t</label>\r\n\t);\r\n}","import React from \"react\";\r\nimport GCEngine, {Vec} from \"./GCEngine\";\r\nimport {GenericNumberInput} from \"./GenericNumberInput\";\r\n\r\nexport class NewPoint {\r\n    constructor(\r\n        private _x: number = 0,\r\n        private _y: number = 0,\r\n        private _z: number = 0,\r\n        public callBack: (vector: Vec) => void\r\n        ) {}\r\n\r\n    public get x() {\r\n        return this._x;\r\n    }\r\n\r\n    public set x(val: number) {\r\n        this._x = val;\r\n    }\r\n\r\n    public get y() {\r\n        return this._y;\r\n    }\r\n\r\n    public set y(val: number) {\r\n        this._y = val;\r\n    }\r\n\r\n    public get z() {\r\n        return this._z;\r\n    }\r\n\r\n    public set z(val: number) {\r\n        this._z = val;\r\n    }\r\n\r\n    public create() {\r\n        this.callBack({x: this._x, y: this._y, z: this._z});\r\n        GCEngine.addPointToDrawing({x: this._x, y: this._y, z: this._z});\r\n    }\r\n}\r\n\r\nexport interface NewPointFCProps {\r\n    instance: NewPoint;\r\n    killInstance: () => void;\r\n}\r\n\r\nexport const NewPointFC: React.FC<NewPointFCProps> = (props) => {\r\n    const {instance, killInstance} = props;\r\n    return (\r\n        <div className=\"dialog\">\r\n            <h2>Add point</h2>\r\n            <GenericNumberInput label=\"X\" value={instance.x} min={-999} max={999} step={1} returnValue={(val) => {instance.x = val}} />\r\n            <GenericNumberInput label=\"Y\" value={instance.y} min={-999} max={999} step={1} returnValue={(val) => {instance.y = val}} />\r\n            <GenericNumberInput label=\"Z\" value={instance.z} min={-999} max={999} step={1} returnValue={(val) => {instance.z = val}} />\r\n            <button onClick={() => {instance.create(); killInstance()}}>Create</button>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport GCEngine, {Vec, Point} from \"./GCEngine\";\r\nimport {GenericNumberInput} from \"./GenericNumberInput\";\r\n\r\nexport class SelectedPoint {\r\n    private _selectedPointId: string | null;\r\n    private _selectedPoint: Vec | null;\r\n\r\n    constructor(selectionPos: Point) {\r\n        this._selectedPointId = null;\r\n        this._selectedPoint = null;\r\n        const settings = GCEngine.getSettings();\r\n\r\n        Object.keys(GCEngine.drawing.points).forEach((key: string) => {\r\n            const vector = GCEngine.drawing.points[key];\r\n            const pos = GCEngine.project(settings, vector, true);\r\n            const deltaH = selectionPos.h - pos.h;\r\n            const deltaV = GCEngine.heightOfDrawing - selectionPos.v - pos.v;\r\n            const distance = Math.sqrt(deltaH * deltaH + deltaV * deltaV);\r\n            if (distance < 7) {\r\n                this._selectedPointId = key;\r\n                this._selectedPoint = GCEngine.drawing.points[key];\r\n            }\r\n        });\r\n    }\r\n\r\n    public get id() {\r\n        return this._selectedPointId;\r\n    }\r\n\r\n    public get point() {\r\n        return this._selectedPoint;\r\n    }\r\n\r\n    public delete = () => {\r\n        this._selectedPointId && GCEngine.deletePointFromDrawing(this._selectedPointId);\r\n    }\r\n}\r\n\r\nexport interface SelectedPointProp {\r\n    instance: SelectedPoint;\r\n    killInstance: () => void;\r\n}\r\n\r\nexport const SelectedPointFC: React.FC<SelectedPointProp> = (props) => {\r\n    const {instance, killInstance} = props;\r\n    return (\r\n        <div className=\"dialog\">\r\n            <h2>Selected Point</h2>\r\n            <button onClick={() => {instance.delete(); killInstance()}}>Delete</button>\r\n            <div>\r\n                <GenericNumberInput label={\"X\"} min={-99999} max={99999} step={0.01} value={instance.point!.x} returnValue={(val) => {instance.point!.x = val; GCEngine.draw()}} />\r\n                <GenericNumberInput label={\"Y\"} min={-99999} max={99999} step={0.01} value={instance.point!.y} returnValue={(val) => {instance.point!.y = val; GCEngine.draw()}} />\r\n                <GenericNumberInput label={\"Z\"} min={-99999} max={99999} step={0.01} value={instance.point!.z} returnValue={(val) => {instance.point!.z = val; GCEngine.draw()}} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport GCEngine, {Settings} from \"./GCEngine\";\r\nimport {GenericNumberInput} from \"./GenericNumberInput\";\r\n\r\nexport class SettingsDialog {\r\n    private _settings: Settings;\r\n    constructor() {\r\n        this._settings = GCEngine.getSettings();\r\n    }\r\n\r\n    public get settings() {\r\n        return this._settings;\r\n    }\r\n\r\n    public handleSettings = (key: string, value: number) => {\r\n        if (this._settings) {\r\n            let settingsCopy: Settings = {...this._settings};\r\n            switch (key) {\r\n                case \"rotation\": settingsCopy.rotation = value; break;\r\n                case \"elevation\": settingsCopy.elevation = value; break;\r\n                case \"distance\": settingsCopy.distance = value; break;\r\n                case \"picturePlane\": settingsCopy.picturePlane = value; break;\r\n                case \"offsetH\": settingsCopy.offsetH = value; break;\r\n                case \"offsetV\": settingsCopy.offsetV = value; break;\r\n            }\r\n            GCEngine.setSettings(settingsCopy);\r\n            this._settings = settingsCopy;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface SettingsDialogFCProps {\r\n    instance: SettingsDialog;\r\n    killInstance: () => void;\r\n}\r\n\r\nexport const SettingsDialogFC: React.FC<SettingsDialogFCProps> = (props) => {\r\n    const {instance} = props;\r\n    return (\r\n        <div className={\"dialog\"} onMouseDown={e => e.stopPropagation()} onMouseMove={e => e.stopPropagation()}>\r\n            <h2>Perspektive Settings</h2>\r\n            <GenericNumberInput label={\"Rotation\"} min={0} max={359} step={5} value={instance.settings.rotation} returnValue={(val) => instance.handleSettings(\"rotation\", val)} />\r\n            <GenericNumberInput label={\"Elevation\"} min={-90} max={90} step={5} value={instance.settings.elevation} returnValue={(val) => instance.handleSettings(\"elevation\", val)} />\r\n            <GenericNumberInput label={\"Distance\"} min={0} max={999999} step={50} value={instance.settings.distance} returnValue={(val) => instance.handleSettings(\"distance\", val)} />\r\n            <GenericNumberInput label={\"Distance to Picture Plane\"} min={0} max={999999} step={50} value={instance.settings.picturePlane} returnValue={(val) => instance.handleSettings(\"picturePlane\", val)} />\r\n            <GenericNumberInput label={\"Offset Horisontal\"} min={0} max={999999} step={5} value={instance.settings.offsetH} returnValue={(val) => instance.handleSettings(\"offsetH\", val)} />\r\n            <GenericNumberInput label={\"Offset Vertical\"} min={0} max={999999} step={5} value={instance.settings.offsetV} returnValue={(val) => instance.handleSettings(\"offsetV\", val)} />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport GCEngine, {Vec} from \"./GCEngine\";\r\nimport GCView from \"./GCView\";\r\nimport {NewPoint, NewPointFC} from \"./NewPoint\";\r\nimport {SelectedPointFC, SelectedPoint} from \"./SelectedPoint\";\r\nimport \"./App.css\";\r\nimport { SettingsDialogFC, SettingsDialog } from \"./SettingsDialog\";\r\n\r\nconst App: React.FC = () => {\r\n\t// Show/hide settings\r\n\tconst [settingsInstance, setSettingsInstance] = React.useState<SettingsDialog | null>(null);\r\n\r\n\tconst toggleSettings = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (settingsInstance) {\r\n\t\t\tsetSettingsInstance(null);\r\n\t\t} else {\r\n\t\t\tsetSettingsInstance(new SettingsDialog());\r\n\t\t}\r\n\t\tshowAddPoint(null);\r\n\t\tselectPoint(null);\r\n\t}\r\n\r\n\t// Pan\r\n\tconst [mousePos, mouseMoved] = React.useState<{x: number, y: number} | null>(null);\r\n\r\n\tconst handleMouseMove = (event: React.MouseEvent) => {\r\n\t\tif (event.buttons === 1) {\r\n\t\t\tmouseMoved({x: event.movementX, y: event.movementY});\r\n\t\t} else if (mousePos) {\r\n\t\t\tmouseMoved(null);\r\n\t\t}\r\n\t}\r\n\r\n\t// Zoom\r\n\tconst [scale, setScale] = React.useState(1);\r\n\r\n\tconst handleZoom = (event: React.WheelEvent) => {\r\n\t\tlet newScale = scale - event.deltaY * 0.0005;\r\n\t\tif (newScale < 0.2) newScale = 0.2;\r\n\t\tsetScale(newScale);\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => { GCEngine.setScale(scale) },\r\n\t\t[scale]\r\n\t);\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tmousePos && GCEngine.pan(mousePos.x, mousePos.y);\r\n\t\t\tGCEngine.draw();\r\n\r\n\t\t\tconst onResize = () => {\r\n\t\t\t\tGCEngine.setCanvasSize();\r\n\t\t\t\tGCEngine.draw();\r\n\t\t\t}\r\n\t\r\n\t\t\twindow.addEventListener('resize', onResize);\r\n\t\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('resize', onResize);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[mousePos]\r\n\t);\r\n\r\n\t// Handle touch events for zooming and scaling\r\n\tconst [touchRefPoint, setTouchRefPoint] = React.useState<[number, number]>([-1, -1]);\r\n\tconst [touchMovement, setTouchMovement] = React.useState<[number, number]>([0, 0]);\r\n\tconst [touchDistance, setTouchDistance] = React.useState<number>(0);\r\n\tconst [lastTouchDistance, setLastTouchDistance] = React.useState<number>(0);\r\n\r\n\tconst handleTouchStart = (event: React.TouchEvent) => {\r\n\t\tif (event.touches.length === 2) {\r\n\t\t\tconst deltaX = event.touches[1].clientX - event.touches[0].clientX;\r\n\t\t\tconst deltaY = event.touches[1].clientY - event.touches[0].clientY;\r\n\t\t\tconst distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n\t\t\tsetTouchDistance(0);\r\n\t\t\tsetLastTouchDistance(distance);\r\n\t\t}\r\n\t\tif (event.touches.length === 1) {\r\n\t\t\tsetTouchRefPoint([event.touches[0].clientX, event.touches[0].clientY]);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleTouchEnd = (event: React.TouchEvent) => {\r\n\t\tif (event.touches.length === 1) {\r\n\t\t\tsetTouchDistance(0);\r\n\t\t\tsetLastTouchDistance(0);\r\n\t\t\tsetTouchRefPoint([event.touches[0].clientX, event.touches[0].clientY]);\r\n\t\t}\r\n\t\tsetTouchMovement([0, 0]);\r\n\t}\r\n\r\n\tconst handleTouchMove = (event: React.TouchEvent) => {\r\n\t\tif (event.touches.length > 1) {\r\n\t\t\tconst deltaX2 = event.touches[1].clientX - event.touches[0].clientX;\r\n\t\t\tconst deltaY2 = event.touches[1].clientY - event.touches[0].clientY;\r\n\t\t\tconst distance = Math.sqrt(deltaX2 * deltaX2 + deltaY2 * deltaY2);\r\n\t\t\tconst delta = distance - lastTouchDistance;\r\n\t\t\tsetTouchDistance(delta);\r\n\t\t\tsetLastTouchDistance(distance);\r\n\t\t} else {\r\n\t\t\tconst deltaX = Math.ceil(event.touches[0].clientX - touchRefPoint[0]);\r\n\t\t\tconst deltaY = Math.ceil(event.touches[0].clientY - touchRefPoint[1]);\r\n\t\t\tsetTouchRefPoint([touchRefPoint[0] + deltaX, touchRefPoint[1] + deltaY]);\r\n\t\t\tsetTouchMovement([deltaX, deltaY]);\r\n\t\t\tsetTouchDistance(0);\r\n\t\t\tsetLastTouchDistance(0);\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tif (touchDistance !== 0) {\r\n\t\t\t\tconst curScale = GCEngine.getScale();\r\n\t\t\t\tlet newScale = curScale + touchDistance * 0.001;\r\n\t\t\t\tif (newScale < 0.2) newScale = 0.2;\r\n\t\t\t\tGCEngine.setScale(newScale);\r\n\t\t\t} else {\r\n\t\t\t\ttouchMovement[0] !== 0 && touchMovement[1] !== 0 && GCEngine.pan(touchMovement[0] * window.devicePixelRatio, touchMovement[1] * window.devicePixelRatio);\r\n\t\t\t\tGCEngine.draw();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[touchMovement, touchDistance]\r\n\t);\r\n\r\n\t// Add a point to the drawing\r\n\tconst [addPointInstance, showAddPoint] = React.useState<NewPoint | null>(null);\r\n\tconst addPoint = () => {\r\n\t\tif (addPointInstance) showAddPoint(null);\r\n\t\telse showAddPoint(new NewPoint(0, 0, 0, (vector: Vec) => {showAddPoint(null)}));\r\n\t\tsetSettingsInstance(null);\r\n\t\tselectPoint(null);\r\n\t}\r\n\r\n\t// Select point\r\n\tconst [selectedPointInstance, selectPoint] = React.useState<SelectedPoint | null>(null);\r\n\tconst trySelectPoint = (event: React.MouseEvent) => {\r\n\t\tconst sel = new SelectedPoint({h: event.clientX, v: event.clientY});\r\n\t\tsetSettingsInstance(null);\r\n\t\tshowAddPoint(null);\r\n\t\tselectPoint(!!sel.id ? sel : null);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"App\"\r\n\t\t\tonMouseMove={(e) => handleMouseMove(e)}\r\n\t\t\tonWheel={(e) => handleZoom(e)}\r\n\t\t\tonTouchStart={(e) => {handleTouchStart(e)}}\r\n\t\t\tonTouchEnd={(e) => {handleTouchEnd(e)}}\r\n\t\t\tonTouchMove={(e) => {handleTouchMove(e)}}\r\n\t\t>\r\n\t\t\t<GCView onClick={(e) => trySelectPoint(e)} />\r\n\r\n\t\t\t<div className=\"menu\">\r\n\t\t\t\t<button onClick={toggleSettings}>{settingsInstance ? \"Back\" : \"Settings\"}</button>\r\n\t\t\t\t<button onClick={addPoint}>Add point</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{settingsInstance && <SettingsDialogFC instance={settingsInstance} killInstance={() => setSettingsInstance(null)} />}\r\n\t\t\t{addPointInstance && <NewPointFC instance={addPointInstance} killInstance={() => showAddPoint(null)} />}\r\n\t\t\t{selectedPointInstance && <SelectedPointFC instance={selectedPointInstance} killInstance={() => selectPoint(null)} />}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}