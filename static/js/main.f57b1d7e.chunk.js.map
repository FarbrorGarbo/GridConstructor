{"version":3,"sources":["GCEngine.ts","GCView.tsx","App.tsx","index.tsx"],"names":["_settings","_degrees_to_radians","degrees","Math","PI","this","_getInitialSettings","rotation","elevation","distance","picturePlane","offsetH","offsetV","settings","point","rot","elev","n","x","sin","y","cos","a","b","z","c","H","V","h","v","GridConstructor","drawing","canvasElm","React","useRef","useState","width","window","innerWidth","height","innerHeight","canvasSize","setCanvasSize","useEffect","canvas","current","ctx","getContext","clearRect","strokeStyle","forEach","line","calcPointA","GCEngine","project","calcPointB","beginPath","moveTo","lineTo","stroke","key","points","calc","arc","onResize","addEventListener","removeEventListener","className","ref","GenericNumberInput","props","inputRef","value","setValue","returnValue","label","type","min","max","step","onChange","newValue","parseInt","updateValue","toString","App","loadedSettings","initial","localStorageData","localStorage","getItem","JSON","parse","readSettings","floor","updateSettings","handleSettings","settingsCopy","stringify","console","log","setItem","showSettings","toggle","loadedDrawing","readCurrentDrawing","GCView","onClick","event","preventDefault","val","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f57b1d7e.chunk.js","sourcesContent":["// The GridConstructor 3d engine\r\n\r\nclass GCEngine {\r\n    private _settings: Settings;\r\n\r\n    constructor () {\r\n        this._settings = this._getInitialSettings();\r\n    }\r\n\r\n    private _getInitialSettings () : Settings {\r\n        return {\r\n            rotation: 0,\r\n            elevation: 0,\r\n            distance: 1000,\r\n            picturePlane: 1000,\r\n            offsetH: 500,\r\n            offsetV: 500\r\n        }\r\n    }\r\n\r\n    private _degrees_to_radians = (degrees: number) => {\r\n      return degrees * (Math.PI / 180);\r\n    }\r\n\r\n    public project (settings: Settings = this._settings, point: Vec) : Point {\r\n        const rot = this._degrees_to_radians(settings.rotation);\r\n        const elev = this._degrees_to_radians(settings.elevation);\r\n        const n = point.x * Math.sin(rot) + point.y * Math.cos(rot);\r\n        const a = point.x * Math.cos(rot) - point.y * Math.sin(rot);\r\n        const b = n * Math.cos(elev) - point.z * Math.sin(elev);\r\n        const c = n * Math.sin(elev) + point.z * Math.cos(elev);\r\n        const H = settings.picturePlane * a / (settings.distance + b) + settings.offsetH;\r\n        const V = settings.picturePlane * c / (settings.distance + b) + settings.offsetV;\r\n        return {h: H, v: V};\r\n    }\r\n}\r\n\r\nexport type Settings = {\r\n    rotation: number,\r\n    elevation: number,\r\n    distance: number,\r\n    picturePlane: number,\r\n    offsetH: number,\r\n    offsetV: number\r\n};\r\n\r\nexport type Vec = {\r\n    x: number,\r\n    y: number,\r\n    z: number\r\n};\r\n\r\nexport type Point = {\r\n    h: number,\r\n    v: number\r\n};\r\n\r\nexport type Line = {\r\n    start: Vec,\r\n    end: Vec\r\n};\r\n\r\nexport type Drawing = {\r\n    points: {\r\n        [key: string] : Vec\r\n    }\r\n}\r\n\r\nexport default new GCEngine ();\r\n","import React from \"react\";\r\nimport GCEngine, { Settings, Drawing } from \"./GCEngine\";\r\n\r\ntype ViewProps = {\r\n\tsettings: Settings,\r\n\tdrawing?: Drawing\r\n}\r\n\r\nconst GridConstructor: React.FC<ViewProps> = ({ settings, drawing }: ViewProps) => {\r\n\tconst canvasElm = React.useRef<HTMLCanvasElement>(null);\r\n\tconst [canvasSize, setCanvasSize] = React.useState({width: window.innerWidth, height: window.innerHeight});\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tconst canvas = canvasElm.current;\r\n\t\t// console.log(settings);\r\n\r\n\t\tif (canvas) {\r\n\t\t\tcanvas.width = canvasSize.width;\r\n\t\t\tcanvas.height = canvasSize.height;\r\n\r\n\t\t\tconst ctx = canvas.getContext(\"2d\");\r\n\t\t\tif (!!ctx) {\r\n\t\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\t\t\t\tctx.strokeStyle = \"#f00\";\r\n\r\n\t\t\t\tconst xLines = [\r\n\t\t\t\t\t[{x:0, y:0, z:0}, {x:500, y:0, z:0}],\r\n\t\t\t\t\t[{x:480, y:0, z:5}, {x:500, y:0, z:0}]\r\n\t\t\t\t]\r\n\t\t\t\txLines.forEach(line => {\r\n\t\t\t\t\tconst calcPointA = GCEngine.project(settings, line[0]);\r\n\t\t\t\t\tconst calcPointB = GCEngine.project(settings, line[1]);\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(calcPointA.h, canvas.height - calcPointA.v);\r\n\t\t\t\t\tctx.lineTo(calcPointB.h, canvas.height - calcPointB.v);\r\n\t\t\t\t\tctx.lineTo(calcPointB.h, canvas.height - calcPointB.v);\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tctx.strokeStyle = \"#0f0\";\r\n\t\t\t\tconst yLines = [\r\n\t\t\t\t\t[{x:0, y:0, z:0}, {x:0, y:500, z:0}],\r\n\t\t\t\t\t[{x:5, y:480, z:0}, {x:0, y:500, z:0}]\r\n\t\t\t\t]\r\n\t\t\t\tyLines.forEach(line => {\r\n\t\t\t\t\tconst calcPointA = GCEngine.project(settings, line[0]);\r\n\t\t\t\t\tconst calcPointB = GCEngine.project(settings, line[1]);\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(calcPointA.h, canvas.height - calcPointA.v);\r\n\t\t\t\t\tctx.lineTo(calcPointB.h, canvas.height - calcPointB.v);\r\n\t\t\t\t\tctx.lineTo(calcPointB.h, canvas.height - calcPointB.v);\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tctx.strokeStyle = \"#00f\";\r\n\t\t\t\tconst zLines = [\r\n\t\t\t\t\t[{x:0, y:0, z:0}, {x:0, y:0, z:500}],\r\n\t\t\t\t\t[{x:5, y:0, z:480}, {x:0, y:0, z:500}]\r\n\t\t\t\t]\r\n\t\t\t\tzLines.forEach(line => {\r\n\t\t\t\t\tconst calcPointA = GCEngine.project(settings, line[0]);\r\n\t\t\t\t\tconst calcPointB = GCEngine.project(settings, line[1]);\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(calcPointA.h, canvas.height - calcPointA.v);\r\n\t\t\t\t\tctx.lineTo(calcPointB.h, canvas.height - calcPointB.v);\r\n\t\t\t\t\tctx.lineTo(calcPointB.h, canvas.height - calcPointB.v);\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tctx.strokeStyle = \"#aaa\";\r\n\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\tconst cubeLines = [\r\n\t\t\t\t\t[{x:-200, y:-200, z:-200}, {x:200, y:-200, z:-200}],\r\n\t\t\t\t\t[{x:-200, y:200, z:-200}, {x:200, y:200, z:-200}],\r\n\t\t\t\t\t[{x:-200, y:-200, z:200}, {x:200, y:-200, z:200}],\r\n\t\t\t\t\t[{x:-200, y:200, z:200}, {x:200, y:200, z:200}],\r\n\r\n\t\t\t\t\t[{x:-200, y:-200, z:-200}, {x:-200, y:-200, z:200}],\r\n\t\t\t\t\t[{x:200, y:-200, z:-200}, {x:200, y:-200, z:200}],\r\n\t\t\t\t\t[{x:200, y:200, z:-200}, {x:200, y:200, z:200}],\r\n\t\t\t\t\t[{x:-200, y:200, z:-200}, {x:-200, y:200, z:200}],\r\n\t\t\t\t\t\r\n\t\t\t\t\t[{x:-200, y:-200, z:200}, {x:-200, y:200, z:200}],\r\n\t\t\t\t\t[{x:200, y:-200, z:200}, {x:200, y:200, z:200}],\r\n\t\t\t\t\t[{x:-200, y:-200, z:-200}, {x:-200, y:200, z:-200}],\r\n\t\t\t\t\t[{x:200, y:-200, z:-200}, {x:200, y:200, z:-200}]\r\n\t\t\t\t]\r\n\t\t\t\tcubeLines.forEach(line => {\r\n\t\t\t\t\tconst calcPointA = GCEngine.project(settings, line[0]);\r\n\t\t\t\t\tconst calcPointB = GCEngine.project(settings, line[1]);\r\n\t\t\t\t\tctx.moveTo(calcPointA.h, canvas.height - calcPointA.v);\r\n\t\t\t\t\tctx.lineTo(calcPointB.h, canvas.height - calcPointB.v);\r\n\t\t\t\t});\r\n\t\t\t\tctx.stroke();\r\n\r\n\t\t\t\t// Drawing\r\n\t\t\t\tif (drawing) {\r\n\t\t\t\t\tctx.strokeStyle = \"#000\";\r\n\t\t\t\t\tfor (const key in drawing.points) {\r\n\t\t\t\t\t\tconst calc = GCEngine.project(settings, drawing.points[key]);\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.arc(calc.h, calc.v, 5, 0, 2 * Math.PI);\r\n\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst onResize = () => {\r\n\t\t\tsetCanvasSize({width: window.innerWidth, height: window.innerHeight});\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', onResize);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', onResize);\r\n\t\t}\r\n\t},\r\n\t[settings, canvasSize, drawing]\r\n\t);\r\n\r\n  \treturn (\r\n\t\t<canvas className={\"canvas\"} ref={canvasElm} />\r\n  \t);\r\n}\r\n\r\nexport default GridConstructor;\r\n","import React from \"react\";\nimport { Settings, Drawing } from \"./GCEngine\";\nimport GCView from \"./GCView\";\nimport \"./App.css\";\n\nconst readSettings = (initial: Settings) => {\n\tconst localStorageData: string | null = localStorage.getItem(\"gc_settings\");\n\n\tconst value = !localStorageData\n\t\t\t? initial\n\t\t\t: JSON.parse(localStorageData);\n\n\treturn value;\n}\n\nconst readCurrentDrawing = () => {\n\tconst localStorageData: string | null = localStorage.getItem(\"gc_current_drawing\");\n\n\tconst value = !localStorageData\n\t\t\t? {\t// Default empty drawing with one point i origo\n\t\t\t\tpoints: {\n\t\t\t\t\t\"x0_y0_z0\": {x: 0, y: 0, z: 0}\n\t\t\t\t}\n\t\t\t}\n\t\t\t: JSON.parse(localStorageData);\n\n\treturn value;\n}\n\ntype GenericNumberInputProps = {\n\tlabel: string;\n\tmin: number;\n\tmax: number;\n\tstep: number;\n\tvalue: number;\n\treturnValue(val: number): void;\n}\n\nconst GenericNumberInput: React.FC<GenericNumberInputProps> = (props) => {\n\tconst inputRef = React.useRef<HTMLInputElement>(null);\n\tconst [value, setValue] = React.useState(props.value);\n\n\tconst updateValue = () => {\n\t\tlet  newValue = parseInt(inputRef.current!.value === \"\" ? \"0\" : inputRef.current!.value);\n\t\tif (newValue < props.min) newValue = props.min;\n\t\telse if (newValue > props.max) newValue = props.max;\n\t\tsetValue(newValue);\n\t}\n\n\tconst {returnValue} = props;\n\n\tReact.useEffect( () => { returnValue(value) }, [returnValue, value] );\n\n\treturn (\n\t\t<label>{props.label}:\n\t\t\t<input\n\t\t\t\tref={inputRef}\n\t\t\t\ttype=\"number\"\n\t\t\t\tmin={props.min}\n\t\t\t\tmax={props.max}\n\t\t\t\tstep={props.step}\n\t\t\t\tonChange={() => updateValue()}\n\t\t\t\tvalue={value.toString()}\n\t\t\t/>\n\t\t</label>\n\t);\n}\n\nconst App: React.FC = () => {\n\t// Load settings\n\tconst loadedSettings: Settings = readSettings(\n\t\t{\t// Default settings\n\t\t\trotation: 0,\n\t\t\televation: 0,\n\t\t\tdistance: 1000,\n\t\t\tpicturePlane: 1000,\n\t\t\toffsetH: Math.floor(window.innerWidth/2),\n\t\t\toffsetV: Math.floor(window.innerHeight/2)\n\t\t}\n\t);\n\n\t// Settings\n\tconst [settings, updateSettings] = React.useState<Settings>(loadedSettings);\n\n\tconst handleSettings = (key: string, value: number) => {\n\t\tlet settingsCopy: Settings = {...settings};\n\t\tswitch (key) {\n\t\t\tcase \"rotation\": settingsCopy.rotation = value; break;\n\t\t\tcase \"elevation\": settingsCopy.elevation = value; break;\n\t\t\tcase \"distance\": settingsCopy.distance = value; break;\n\t\t\tcase \"picturePlane\": settingsCopy.picturePlane = value; break;\n\t\t\tcase \"offsetH\": settingsCopy.offsetH = value; break;\n\t\t\tcase \"offsetV\": settingsCopy.offsetV = value; break;\n\t\t}\n\t\tif (JSON.stringify(settings) !== JSON.stringify(settingsCopy))\n\t\t\tupdateSettings(settingsCopy);\n\t}\n\n\tReact.useEffect(\n\t\t() => {\n\t\t\tconsole.log(\"useEffekt\", settings);\n\t\t\tlocalStorage.setItem(\"gc_settings\",\n\t\t\tJSON.stringify(settings)\n\t\t\t);\n\t\t},\n\t\t[settings]\n\t);\n\n\t// Show/hide settings\n\tconst [showSettings, toggle] = React.useState(false);\n\n\tfunction toggleSettings (event: any) {\n\t\tevent.preventDefault();\n\t\ttoggle(!showSettings);\n\t}\n\n\t// Drawing \"document\"\n\tconst loadedDrawing: Drawing = readCurrentDrawing();\n\tconst [drawing] = React.useState<Drawing>(loadedDrawing);\n\n\tReact.useEffect(\n\t\t() => {console.log(drawing)},\n\t\t[drawing]\n\t);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<GCView settings={settings} drawing={drawing} />\n\n\t\t\t<div className=\"menu\">\n\t\t\t\t<button onClick={toggleSettings}>{showSettings ? \"Back\" : \"Settings\"}</button>\n\t\t\t</div>\n\t\t\t\n\t\t\t{showSettings &&\n\t\t\t<div className={\"settings\"}>\n\t\t\t\t<h2>Perspektive Settings</h2>\n\t\t\t\t<GenericNumberInput label={\"Rotation\"} min={0} max={359} step={5} value={settings.rotation} returnValue={(val) => handleSettings(\"rotation\", val)} />\n\t\t\t\t<GenericNumberInput label={\"Elevation\"} min={0} max={90} step={5} value={settings.elevation} returnValue={(val) => handleSettings(\"elevation\", val)} />\n\t\t\t\t<GenericNumberInput label={\"Distance\"} min={0} max={999999} step={50} value={settings.distance} returnValue={(val) => handleSettings(\"distance\", val)} />\n\t\t\t\t<GenericNumberInput label={\"Distance to Picture Plane\"} min={0} max={999999} step={50} value={settings.picturePlane} returnValue={(val) => handleSettings(\"rotapicturePlane\", val)} />\n\t\t\t\t<GenericNumberInput label={\"Offset Horisontal\"} min={0} max={999999} step={5} value={settings.offsetH} returnValue={(val) => handleSettings(\"offsetH\", val)} />\n\t\t\t\t<GenericNumberInput label={\"Offset Vertical\"} min={0} max={999999} step={5} value={settings.offsetV} returnValue={(val) => handleSettings(\"offsetV\", val)} />\n\t\t\t</div>}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}