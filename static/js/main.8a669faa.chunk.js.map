{"version":3,"sources":["GCEngine.ts","GCView.tsx","App.tsx","index.tsx"],"names":["_settings","_canvasElm","_cxt","_scale","_pan","_degrees_to_radians","degrees","Math","PI","this","_getInitialSettings","h","window","innerWidth","v","innerHeight","rotation","elevation","distance","picturePlane","offsetH","offsetV","docSize","width","height","settings","point","rot","elev","n","x","sin","y","cos","a","b","z","c","H","V","getContext","scale","devicePixelRatio","canvasElm","console","warn","drawing","clearRect","fillStyle","fillRect","strokeStyle","xLines","forEach","line","calcPointA","_project","calcPointB","beginPath","moveTo","lineTo","stroke","yLines","zLines","cubeLines","key","points","calc","arc","GCView","React","useRef","useLayoutEffect","canvas","current","GCEngine","registerCanvas","className","ref","GenericNumberInput","props","inputRef","useState","value","setValue","returnValue","useEffect","label","type","min","max","step","onChange","newValue","parseInt","updateValue","toString","App","localStorageData","localStorage","getItem","JSON","parse","getSettings","getPersistentSettings","updateSettings","handleSettings","settingsCopy","stringify","setItem","showSettings","toggle","readPersistentDrawing","mousePos","mouseMoved","setScale","pan","draw","onResize","setCanvasSize","addEventListener","removeEventListener","onMouseMove","e","event","buttons","movementX","movementY","onWheel","deltaY","onClick","preventDefault","val","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a669faa.chunk.js","sourcesContent":["// The GridConstructor 3d engine\r\n\r\nclass GCEngine {\r\n    private _settings: Settings;\r\n    private _canvasElm: HTMLCanvasElement | undefined;\r\n    private _cxt: CanvasRenderingContext2D | null;\r\n    private _scale: number;\r\n    private _pan: {h: number, v: number};\r\n\r\n    constructor () {\r\n        this._settings = this._getInitialSettings();\r\n        this._scale = 1;\r\n        this._pan = {h: window.innerWidth/2, v: -window.innerHeight/2};\r\n        this._cxt = null;\r\n    }\r\n\r\n    private _getInitialSettings () : Settings {\r\n        return {\r\n            rotation: 0,\r\n            elevation: 0,\r\n            distance: 1000,\r\n            picturePlane: 1000,\r\n            offsetH: 1754,\r\n            offsetV: 1240,\r\n            docSize: {width: 3508, height: 2480} // A4 portrait in 300 ppi\r\n        }\r\n    }\r\n\r\n    private _degrees_to_radians = (degrees: number) => {\r\n      return degrees * (Math.PI / 180);\r\n    }\r\n\r\n    private _project (settings: Settings = this._settings, point: Vec) : Point {\r\n        const rot = this._degrees_to_radians(settings.rotation);\r\n        const elev = this._degrees_to_radians(settings.elevation);\r\n        const n = point.x * Math.sin(rot) + point.y * Math.cos(rot);\r\n        const a = point.x * Math.cos(rot) - point.y * Math.sin(rot);\r\n        const b = n * Math.cos(elev) - point.z * Math.sin(elev);\r\n        const c = n * Math.sin(elev) + point.z * Math.cos(elev);\r\n        const H = settings.picturePlane * a / (settings.distance + b); // + settings.offsetH;\r\n        const V = settings.picturePlane * c / (settings.distance + b); // + settings.offsetV;\r\n        return {h: H * this._scale + this._pan.h, v: V * this._scale - this._pan.v};\r\n    }\r\n\r\n    public getSettings(): Settings {\r\n        return this._settings;\r\n    }\r\n\r\n    public setSettings(settings: Settings) {\r\n        this._settings = settings;\r\n    }\r\n\r\n    public setCanvasSize() {\r\n        if (this._canvasElm && this._canvasElm.getContext) {\r\n            this._canvasElm.width = window.innerWidth;\r\n            this._canvasElm.height = window.innerHeight;\r\n        }\r\n    }\r\n\r\n    public setScale(scale: number) {\r\n        this._scale = scale;\r\n    }\r\n\r\n    public pan(x: number, y: number) {\r\n        this._pan.h += x / window.devicePixelRatio ;\r\n        this._pan.v += y / window.devicePixelRatio;\r\n    }\r\n\r\n    public registerCanvas(canvasElm: HTMLCanvasElement) {\r\n        if (canvasElm && canvasElm.getContext) {\r\n            this._canvasElm = canvasElm;\r\n            this._canvasElm.width = window.innerWidth;\r\n            this._canvasElm.height = window.innerHeight;\r\n            this._cxt = this._canvasElm.getContext(\"2d\");\r\n            this._scale = 1;\r\n        } else {\r\n            console.warn(\"Registered canvase element is not of type <canvas>!\");\r\n        }\r\n    }\r\n\r\n    public draw(settings: Settings = this._settings, drawing?: Drawing) {\r\n        if (this._canvasElm && this._cxt) {\r\n\t\t\tthis._canvasElm.width = window.innerWidth; // settings.viewPortSize.width;\r\n            this._canvasElm.height = window.innerHeight; // settings.viewPortSize.height;\r\n            \r\n            this._cxt.clearRect(0, 0, this._canvasElm.width, this._canvasElm.height);\r\n\r\n            // Draw document background\r\n            this._cxt.fillStyle = \"rgb(231, 230, 227)\";\r\n            this._cxt.fillRect(0, 0, this._canvasElm.width, this._canvasElm.height);\r\n            this._cxt.strokeStyle = \"#f00\";\r\n\r\n            const xLines = [\r\n                [{x:0, y:0, z:0}, {x:500, y:0, z:0}],\r\n                [{x:480, y:0, z:5}, {x:500, y:0, z:0}]\r\n            ]\r\n            xLines.forEach(line => {\r\n                const calcPointA = this._project(settings, line[0]);\r\n                const calcPointB = this._project(settings, line[1]);\r\n                this._cxt!.beginPath();\r\n                this._cxt!.moveTo(calcPointA.h, this._canvasElm!.height - calcPointA.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n                this._cxt!.stroke();\r\n            });\r\n\r\n            this._cxt.strokeStyle = \"#0f0\";\r\n            const yLines = [\r\n                [{x:0, y:0, z:0}, {x:0, y:500, z:0}],\r\n                [{x:5, y:480, z:0}, {x:0, y:500, z:0}]\r\n            ]\r\n            yLines.forEach(line => {\r\n                const calcPointA = this._project(settings, line[0]);\r\n                const calcPointB = this._project(settings, line[1]);\r\n                this._cxt!.beginPath();\r\n                this._cxt!.moveTo(calcPointA.h, this._canvasElm!.height - calcPointA.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n                this._cxt!.stroke();\r\n            });\r\n\r\n            this._cxt.strokeStyle = \"#00f\";\r\n            const zLines = [\r\n                [{x:0, y:0, z:0}, {x:0, y:0, z:500}],\r\n                [{x:5, y:0, z:480}, {x:0, y:0, z:500}]\r\n            ]\r\n            zLines.forEach(line => {\r\n                const calcPointA = this._project(settings, line[0]);\r\n                const calcPointB = this._project(settings, line[1]);\r\n                this._cxt!.beginPath();\r\n                this._cxt!.moveTo(calcPointA.h, this._canvasElm!.height - calcPointA.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n                this._cxt!.stroke();\r\n            });\r\n\r\n            this._cxt.strokeStyle = \"#aaa\";\r\n            this._cxt.beginPath();\r\n\r\n            const cubeLines = [\r\n                [{x:-100, y:-100, z:-100}, {x:100, y:-100, z:-100}],\r\n                [{x:-100, y:100, z:-100}, {x:100, y:100, z:-100}],\r\n                [{x:-100, y:-100, z:100}, {x:100, y:-100, z:100}],\r\n                [{x:-100, y:100, z:100}, {x:100, y:100, z:100}],\r\n\r\n                [{x:-100, y:-100, z:-100}, {x:-100, y:-100, z:100}],\r\n                [{x:100, y:-100, z:-100}, {x:100, y:-100, z:100}],\r\n                [{x:100, y:100, z:-100}, {x:100, y:100, z:100}],\r\n                [{x:-100, y:100, z:-100}, {x:-100, y:100, z:100}],\r\n                \r\n                [{x:-100, y:-100, z:100}, {x:-100, y:100, z:100}],\r\n                [{x:100, y:-100, z:100}, {x:100, y:100, z:100}],\r\n                [{x:-100, y:-100, z:-100}, {x:-100, y:100, z:-100}],\r\n                [{x:100, y:-100, z:-100}, {x:100, y:100, z:-100}],\r\n\r\n                // [{x:-297/2, y:0, z:-210/2}, {x:297/2, y:0, z:-210/2}],\r\n                // [{x:-297/2, y:0, z:210/2}, {x:297/2, y:0, z:210/2}],\r\n                // [{x:-297/2, y:0, z:-210/2}, {x:-297/2, y:0, z:210/2}],\r\n                // [{x:297/2, y:0, z:-210/2}, {x:297/2, y:0, z:210/2}]\r\n            ]\r\n            cubeLines.forEach(line => {\r\n                const calcPointA = this._project(settings, line[0]);\r\n                const calcPointB = this._project(settings, line[1]);\r\n                this._cxt!.moveTo(calcPointA.h, this._canvasElm!.height - calcPointA.v);\r\n                this._cxt!.lineTo(calcPointB.h, this._canvasElm!.height - calcPointB.v);\r\n            });\r\n            this._cxt.stroke();\r\n\r\n            if (drawing) {\r\n                this._cxt.strokeStyle = \"#000\";\r\n                for (const key in drawing.points) {\r\n                    const calc = this._project(settings, drawing.points[key]);\r\n                    this._cxt!.beginPath();\r\n                    this._cxt!.arc(calc.h, this._canvasElm!.height - calc.v, 5, 0, 2 * Math.PI);\r\n                    this._cxt!.stroke();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport type Settings = {\r\n    rotation: number,\r\n    elevation: number,\r\n    distance: number,\r\n    picturePlane: number,\r\n    offsetH: number,\r\n    offsetV: number,\r\n    docSize: {width: number, height: number}\r\n};\r\n\r\nexport type Vec = {\r\n    x: number,\r\n    y: number,\r\n    z: number\r\n};\r\n\r\nexport type Point = {\r\n    h: number,\r\n    v: number\r\n};\r\n\r\nexport type Line = {\r\n    start: Vec,\r\n    end: Vec\r\n};\r\n\r\nexport type Drawing = {\r\n    points: {\r\n        [key: string] : Vec\r\n    }\r\n}\r\n\r\nexport default new GCEngine ();\r\n","import React from \"react\";\r\nimport GCEngine, { Settings, Drawing } from \"./GCEngine\";\r\n\r\ntype ViewProps = {\r\n\tsettings: Settings,\r\n\tdrawing?: Drawing\r\n}\r\n\r\nconst GCView: React.FC<ViewProps> = ({ settings, drawing }: ViewProps) => {\r\n\tconst canvasElm = React.useRef<HTMLCanvasElement>(null);\r\n\r\n\t// Lifecycle ComponentDidMount: should only occur once and give us a persistant ref to the canvas.\r\n\tReact.useLayoutEffect(() => {\r\n\t\t// console.log(\"useLayout\", canvasElm);\r\n\t\tconst canvas = canvasElm.current;\r\n\t\tif (canvas)\r\n\t\t\tGCEngine.registerCanvas(canvas);\r\n\r\n\t}, []);\r\n\r\n  \treturn (\r\n\t\t<canvas\r\n\t\t\tclassName={\"canvas\"}\r\n\t\t\tref={canvasElm}\r\n\t\t/>\r\n  \t);\r\n}\r\n\r\nexport default GCView;\r\n","import React from \"react\";\r\nimport GCEngine, {Settings, Drawing} from \"./GCEngine\";\r\nimport GCView from \"./GCView\";\r\nimport \"./App.css\";\r\n\r\nconst getPersistentSettings = () => {\r\n\t// localStorage.setItem(\"gc_settings\", \"\");\r\n\tconst localStorageData: string | null = localStorage.getItem(\"gc_settings\");\r\n\tconst value = !localStorageData\r\n\t\t\t? GCEngine.getSettings()\r\n\t\t\t: JSON.parse(localStorageData);\r\n\r\n\treturn value;\r\n}\r\n\r\nconst readPersistentDrawing = () => {\r\n\tconst localStorageData: string | null = localStorage.getItem(\"gc_current_drawing\");\r\n\tconst value = !localStorageData\r\n\t\t\t? {\t// Default empty drawing with one point i origo\r\n\t\t\t\tpoints: {\r\n\t\t\t\t\t\"x0_y0_z0\": {x: 0, y: 0, z: 0}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t: JSON.parse(localStorageData);\r\n\r\n\treturn value;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n\t// Settings\r\n\tconst [settings, updateSettings] = React.useState<Settings>(getPersistentSettings());\r\n\r\n\tconst handleSettings = (key: string, value: number) => {\r\n\t\tif (settings) {\r\n\t\t\tlet settingsCopy: Settings = {...settings};\r\n\t\tswitch (key) {\r\n\t\t\tcase \"rotation\": settingsCopy.rotation = value; break;\r\n\t\t\tcase \"elevation\": settingsCopy.elevation = value; break;\r\n\t\t\tcase \"distance\": settingsCopy.distance = value; break;\r\n\t\t\tcase \"picturePlane\": settingsCopy.picturePlane = value; break;\r\n\t\t\tcase \"offsetH\": settingsCopy.offsetH = value; break;\r\n\t\t\tcase \"offsetV\": settingsCopy.offsetV = value; break;\r\n\t\t}\r\n\t\tif (JSON.stringify(settings) !== JSON.stringify(settingsCopy))\r\n\t\t\tupdateSettings(settingsCopy);\r\n\t\t}\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => { localStorage.setItem(\"gc_settings\", JSON.stringify(settings)) },\r\n\t\t[settings]\r\n\t);\r\n\r\n\t// Show/hide settings\r\n\tconst [showSettings, toggle] = React.useState(false);\r\n\r\n\tconst toggleSettings = (event: any) => {\r\n\t\tevent.preventDefault();\r\n\t\ttoggle(!showSettings);\r\n\t}\r\n\r\n\t// Drawing \"document\"\r\n\tconst [drawing] = React.useState<Drawing>(readPersistentDrawing());\r\n\r\n\t// Pan\r\n\tconst [mousePos, mouseMoved] = React.useState<{x: number, y: number} | null>(null);\r\n\r\n\tconst handleMouseMove = (event: React.MouseEvent) => {\r\n\t\tif (event.buttons === 1) {\r\n\t\t\tmouseMoved({x: event.movementX, y: event.movementY});\r\n\t\t} else if (mousePos) {\r\n\t\t\tmouseMoved(null);\r\n\t\t}\r\n\t}\r\n\r\n\t// Zoom\r\n\tconst [scale, setScale] = React.useState(1);\r\n\r\n\tconst handleZoom = (event: React.WheelEvent) => {\r\n\t\tsetScale(scale - event.deltaY * 0.001);\r\n\t}\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tmousePos && GCEngine.pan(mousePos.x, mousePos.y);\r\n\t\t\tGCEngine.setScale(scale);\r\n\t\t\tGCEngine.draw(settings, drawing);\r\n\r\n\t\t\tconst onResize = () => {\r\n\t\t\t\tGCEngine.setCanvasSize();\r\n\t\t\t\tGCEngine.draw(settings, drawing);\r\n\t\t\t}\r\n\t\r\n\t\t\twindow.addEventListener('resize', onResize);\r\n\t\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener('resize', onResize);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[mousePos, scale, settings, drawing]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\" onMouseMove={(e) => handleMouseMove(e)} onWheel={(e) => handleZoom(e)} >\r\n\t\t\t<GCView settings={settings} drawing={drawing} />\r\n\r\n\t\t\t<div className=\"menu\">\r\n\t\t\t\t<button onClick={toggleSettings}>{showSettings ? \"Back\" : \"Settings\"}</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{showSettings &&\r\n\t\t\t<div className={\"settings\"}>\r\n\t\t\t\t<h2>Perspektive Settings</h2>\r\n\t\t\t\t<GenericNumberInput label={\"Rotation\"} min={0} max={359} step={5} value={settings.rotation} returnValue={(val) => handleSettings(\"rotation\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Elevation\"} min={0} max={90} step={5} value={settings.elevation} returnValue={(val) => handleSettings(\"elevation\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Distance\"} min={0} max={999999} step={50} value={settings.distance} returnValue={(val) => handleSettings(\"distance\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Distance to Picture Plane\"} min={0} max={999999} step={50} value={settings.picturePlane} returnValue={(val) => handleSettings(\"picturePlane\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Offset Horisontal\"} min={0} max={999999} step={5} value={settings.offsetH} returnValue={(val) => handleSettings(\"offsetH\", val)} />\r\n\t\t\t\t<GenericNumberInput label={\"Offset Vertical\"} min={0} max={999999} step={5} value={settings.offsetV} returnValue={(val) => handleSettings(\"offsetV\", val)} />\r\n\t\t\t</div>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\ntype GenericNumberInputProps = {\r\n\tlabel: string;\r\n\tmin: number;\r\n\tmax: number;\r\n\tstep: number;\r\n\tvalue: number;\r\n\treturnValue(val: number): void;\r\n}\r\n\r\nconst GenericNumberInput: React.FC<GenericNumberInputProps> = (props) => {\r\n\tconst inputRef = React.useRef<HTMLInputElement>(null);\r\n\tconst [value, setValue] = React.useState(props.value);\r\n\r\n\tconst updateValue = () => {\r\n\t\tlet  newValue = parseInt(inputRef.current!.value === \"\" ? \"0\" : inputRef.current!.value);\r\n\t\tif (newValue < props.min) newValue = props.min;\r\n\t\telse if (newValue > props.max) newValue = props.max;\r\n\t\tsetValue(newValue);\r\n\t}\r\n\r\n\tconst {returnValue} = props;\r\n\r\n\tReact.useEffect( () => { returnValue(value) }, [returnValue, value] );\r\n\r\n\treturn (\r\n\t\t<label>{props.label}:\r\n\t\t\t<input\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tmin={props.min}\r\n\t\t\t\tmax={props.max}\r\n\t\t\t\tstep={props.step}\r\n\t\t\t\tonChange={() => updateValue()}\r\n\t\t\t\tvalue={value.toString()}\r\n\t\t\t/>\r\n\t\t</label>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}