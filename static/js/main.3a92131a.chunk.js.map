{"version":3,"sources":["GridConstructor.tsx","App.tsx","index.tsx"],"names":["degrees_to_radians","degrees","Math","PI","projcet","settings","point","rot","rotation","elev","elevation","n","x","sin","y","cos","a","b","z","c","picturePlane","distance","offsetH","offsetV","GridConstructor","canvasElm","React","useRef","useState","width","window","innerWidth","height","innerHeight","canvasSize","setCanvasSize","useEffect","canvas","current","ctx","getContext","clearRect","strokeStyle","forEach","line","calcPointA","calcPointB","beginPath","moveTo","lineTo","stroke","onResize","addEventListener","removeEventListener","className","ref","GenericNumberInput","props","inputRef","value","setValue","returnValue","label","type","min","max","step","onChange","newValue","parseInt","updateValue","toString","App","showSettings","toggle","setRotation","setElevation","setDistance","setPicturePlane","floor","setOffsetH","setOffsetV","val","onClick","event","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a92131a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ntype Settings = {\r\n    rotation: number,\r\n    elevation: number,\r\n    distance: number,\r\n    picturePlane: number,\r\n    offsetH: number,\r\n    offsetV: number\r\n}\r\n\r\ntype ViewProps = {\r\n    settings: Settings\r\n}\r\n\r\ntype Vector = {\r\n\tx: number,\r\n\ty: number,\r\n\tz: number\r\n}\r\n\r\nconst degrees_to_radians = (degrees: number) => {\r\n  return degrees * (Math.PI / 180);\r\n}\r\n\r\nconst projcet = (settings: Settings, point: Vector) => {\r\n\tconst rot = degrees_to_radians(settings.rotation);\r\n\tconst elev = degrees_to_radians(settings.elevation);\r\n\tconst n = point.x * Math.sin(rot) + point.y * Math.cos(rot);\r\n\tconst a = point.x * Math.cos(rot) - point.y * Math.sin(rot);\r\n\tconst b = n * Math.cos(elev) - point.z * Math.sin(elev);\r\n\tconst c = n * Math.sin(elev) + point.z * Math.cos(elev);\r\n\tconst h = settings.picturePlane * a / (settings.distance + b) + settings.offsetH;\r\n\tconst v = settings.picturePlane * c / (settings.distance + b) + settings.offsetV;\r\n\treturn [h, v];\r\n}\r\n\r\nconst GridConstructor: React.FC<ViewProps> = ({ settings }: ViewProps) => {\r\n\tconst canvasElm = React.useRef<HTMLCanvasElement>(null);\r\n\tconst [canvasSize, setCanvasSize] = React.useState({width: window.innerWidth, height: window.innerHeight});\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tconst canvas = canvasElm.current;\r\n\t\t// console.log(settings);\r\n\r\n\t\tif (canvas) {\r\n\t\t\tcanvas.width = canvasSize.width;\r\n\t\t\tcanvas.height = canvasSize.height;\r\n\r\n\t\t\tconst ctx = canvas.getContext(\"2d\");\r\n\t\t\tif (!!ctx) {\r\n\t\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\t\t\t\tctx.strokeStyle = \"#f00\";\r\n\r\n\t\t\t\tconst xLines = [\r\n\t\t\t\t\t[{x:0, y:0, z:0}, {x:500, y:0, z:0}],\r\n\t\t\t\t\t[{x:480, y:0, z:5}, {x:500, y:0, z:0}]\r\n\t\t\t\t]\r\n\t\t\t\txLines.forEach(line => {\r\n\t\t\t\t\tconst calcPointA = projcet(settings, line[0]);\r\n\t\t\t\t\tconst calcPointB = projcet(settings, line[1]);\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(calcPointA[0], canvas.height - calcPointA[1]);\r\n\t\t\t\t\tctx.lineTo(calcPointB[0], canvas.height - calcPointB[1]);\r\n\t\t\t\t\tctx.lineTo(calcPointB[0], canvas.height - calcPointB[1]);\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tctx.strokeStyle = \"#0f0\";\r\n\t\t\t\tconst yLines = [\r\n\t\t\t\t\t[{x:0, y:0, z:0}, {x:0, y:500, z:0}],\r\n\t\t\t\t\t[{x:5, y:480, z:0}, {x:0, y:500, z:0}]\r\n\t\t\t\t]\r\n\t\t\t\tyLines.forEach(line => {\r\n\t\t\t\t\tconst calcPointA = projcet(settings, line[0]);\r\n\t\t\t\t\tconst calcPointB = projcet(settings, line[1]);\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(calcPointA[0], canvas.height - calcPointA[1]);\r\n\t\t\t\t\tctx.lineTo(calcPointB[0], canvas.height - calcPointB[1]);\r\n\t\t\t\t\tctx.lineTo(calcPointB[0], canvas.height - calcPointB[1]);\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tctx.strokeStyle = \"#00f\";\r\n\t\t\t\tconst zLines = [\r\n\t\t\t\t\t[{x:0, y:0, z:0}, {x:0, y:0, z:500}],\r\n\t\t\t\t\t[{x:5, y:0, z:480}, {x:0, y:0, z:500}]\r\n\t\t\t\t]\r\n\t\t\t\tzLines.forEach(line => {\r\n\t\t\t\t\tconst calcPointA = projcet(settings, line[0]);\r\n\t\t\t\t\tconst calcPointB = projcet(settings, line[1]);\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(calcPointA[0], canvas.height - calcPointA[1]);\r\n\t\t\t\t\tctx.lineTo(calcPointB[0], canvas.height - calcPointB[1]);\r\n\t\t\t\t\tctx.lineTo(calcPointB[0], canvas.height - calcPointB[1]);\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tctx.strokeStyle = \"#aaa\";\r\n\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\tconst cubeLines = [\r\n\t\t\t\t\t[{x:-200, y:-200, z:-200}, {x:200, y:-200, z:-200}],\r\n\t\t\t\t\t[{x:-200, y:200, z:-200}, {x:200, y:200, z:-200}],\r\n\t\t\t\t\t[{x:-200, y:-200, z:200}, {x:200, y:-200, z:200}],\r\n\t\t\t\t\t[{x:-200, y:200, z:200}, {x:200, y:200, z:200}],\r\n\r\n\t\t\t\t\t[{x:-200, y:-200, z:-200}, {x:-200, y:-200, z:200}],\r\n\t\t\t\t\t[{x:200, y:-200, z:-200}, {x:200, y:-200, z:200}],\r\n\t\t\t\t\t[{x:200, y:200, z:-200}, {x:200, y:200, z:200}],\r\n\t\t\t\t\t[{x:-200, y:200, z:-200}, {x:-200, y:200, z:200}],\r\n\t\t\t\t\t\r\n\t\t\t\t\t[{x:-200, y:-200, z:200}, {x:-200, y:200, z:200}],\r\n\t\t\t\t\t[{x:200, y:-200, z:200}, {x:200, y:200, z:200}],\r\n\t\t\t\t\t[{x:-200, y:-200, z:-200}, {x:-200, y:200, z:-200}],\r\n\t\t\t\t\t[{x:200, y:-200, z:-200}, {x:200, y:200, z:-200}]\r\n\t\t\t\t]\r\n\t\t\t\tcubeLines.forEach(line => {\r\n\t\t\t\t\tconst calcPointA = projcet(settings, line[0]);\r\n\t\t\t\t\tconst calcPointB = projcet(settings, line[1]);\r\n\t\t\t\t\tctx.moveTo(calcPointA[0], canvas.height - calcPointA[1]);\r\n\t\t\t\t\tctx.lineTo(calcPointB[0], canvas.height - calcPointB[1]);\r\n\t\t\t\t});\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst onResize = () => {\r\n\t\t\tsetCanvasSize({width: window.innerWidth, height: window.innerHeight});\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', onResize);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', onResize);\r\n\t\t}\r\n\t},\r\n\t[settings, canvasSize]\r\n\t);\r\n\r\n  \treturn (\r\n\t\t<canvas className={\"canvas\"} ref={canvasElm} />\r\n  \t);\r\n}\r\n\r\nexport default GridConstructor;\r\n","import React from \"react\";\nimport GridConstructor from './GridConstructor';\nimport \"./App.css\";\n\n// const useSettings: React.FC<{ init?: string }> = (init) => {\n//   const localStorageData: string | null = localStorage.getItem(\"grid\");\n//   const [value, setValue] = React.useState<any>(\n//       !localStorageData ? {} || init\n//     );\n//   React.useEffect(\n//     () => {\n//       localStorage.setItem(\"grid\", JSON.stringify(value));\n//     }\n//   )\n//   return [value, setValue];\n// }\n\ntype GenericNumberInputProps = {\n\tlabel: string;\n\tmin: number;\n\tmax: number;\n\tstep: number;\n\tvalue: number;\n\treturnValue(val: number): void;\n}\n\nconst GenericNumberInput: React.FC<GenericNumberInputProps> = (props) => {\n\tconst inputRef = React.useRef<HTMLInputElement>(null);\n\tconst [value, setValue] = React.useState(props.value);\n\n\tconst updateValue = () => {\n\t\tlet  newValue = parseInt(inputRef.current!.value === \"\" ? \"0\" : inputRef.current!.value);\n\t\tif (newValue < props.min) newValue = props.min;\n\t\telse if (newValue > props.max) newValue = props.max;\n\t\tsetValue(newValue);\n\t}\n\n\tconst {returnValue} = props;\n\n\tReact.useEffect( () => { returnValue(value) }, [returnValue, value] );\n\n\treturn (\n\t\t<label>{props.label}:\n\t\t\t<input\n\t\t\t\tref={inputRef}\n\t\t\t\ttype=\"number\"\n\t\t\t\tmin={props.min}\n\t\t\t\tmax={props.max}\n\t\t\t\tstep={props.step}\n\t\t\t\tonChange={() => updateValue()}\n\t\t\t\tvalue={value.toString()}\n\t\t\t/>\n\t\t</label>\n\t);\n}\n\nconst App: React.FC = () => {\n\t// Show/hide settings\n\tconst [showSettings, toggle] = React.useState(false);\n\n\tfunction toggleSettings (event: any) {\n\t\tevent.preventDefault();\n\t\ttoggle(!showSettings);\n\t}\n\n\t// Settings\n\tconst [rotation, setRotation] = React.useState(25);\n\tconst [elevation, setElevation] = React.useState(20);\n\tconst [distance, setDistance] = React.useState(1000);\n\tconst [picturePlane, setPicturePlane] = React.useState(1000);\n\tconst [offsetH, setOffsetH] = React.useState(Math.floor(window.innerWidth/2));\n\tconst [offsetV, setOffsetV] = React.useState(Math.floor(window.innerHeight/2));\n\n\tconst handleRotation = (value: number) => { setRotation(value) };\n\tconst handleElevation = (value: number) => { setElevation(value) };\n\tconst handleDistance = (value: number) => { setDistance(value) };\n\tconst handlePicturePlane = (value: number) => { setPicturePlane(value) };\n\tconst handleOffsetH = (value: number) => { setOffsetH(value) };\n\tconst handleOffsetV = (value: number) => { setOffsetV(value) };\n\n\t// React.useEffect( () => { console.log(rotation)}, [rotation]);\n\t// React.useEffect( () => { console.log(elevation)}, [elevation]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<GridConstructor settings={{rotation: rotation, elevation: elevation, distance: distance, picturePlane: picturePlane, offsetH: offsetH, offsetV: offsetV}} />\n\t\t\t{showSettings &&\n\t\t\t<div className={\"settings\"}>\n\t\t\t\t<h2>Perspektive Settings</h2>\n\t\t\t\t<GenericNumberInput label={\"Rotation\"} min={0} max={359} step={5} value={rotation} returnValue={(val) => handleRotation(val)} />\n\t\t\t\t<GenericNumberInput label={\"Elevation\"} min={0} max={90} step={5} value={elevation} returnValue={(val) => handleElevation(val)} />\n\t\t\t\t<GenericNumberInput label={\"Distance\"} min={0} max={999999} step={50} value={distance} returnValue={(val) => handleDistance(val)} />\n\t\t\t\t<GenericNumberInput label={\"Distance to Picture Plane\"} min={0} max={999999} step={50} value={picturePlane} returnValue={(val) => handlePicturePlane(val)} />\n\t\t\t\t<GenericNumberInput label={\"Offset Horisontal\"} min={0} max={999999} step={5} value={offsetH} returnValue={(val) => handleOffsetH(val)} />\n\t\t\t\t<GenericNumberInput label={\"Offset Vertical\"} min={0} max={999999} step={5} value={offsetV} returnValue={(val) => handleOffsetV(val)} />\n\t\t\t</div>}\n\t\t\t<button onClick={toggleSettings}>{showSettings ? \"Close\" : \"Settings\"}</button>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}